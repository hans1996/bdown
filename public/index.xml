<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Math</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2019 Hans</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>Math</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Example Page 1</title>
      <link>/courses/example/example1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example1/</guid>
      <description>

&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;

&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;

&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page 2</title>
      <link>/courses/example/example2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example2/</guid>
      <description>

&lt;p&gt;Here are some more tips for getting started with Academic:&lt;/p&gt;

&lt;h2 id=&#34;tip-3&#34;&gt;Tip 3&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;

&lt;h2 id=&#34;tip-4&#34;&gt;Tip 4&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>function</title>
      <link>/python/function/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/python/function/</guid>
      <description>

&lt;h2 id=&#34;è¿åå¼&#34;&gt;è¿åå¼&lt;/h2&gt;

&lt;p&gt;When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The return keyword&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The value or expression that the function should return å½æ¸è¦è¿åçå¼æè¡¨ç¤ºå¼&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import random
def getAnswer(answerNumber):
if answerNumber == 1:
    return &#39;It is certain&#39;
elif answerNumber == 2:
    return &#39;It is decidedly so&#39;
elif answerNumber == 3:
    return &#39;Yes&#39;
elif answerNumber == 4:
    return &#39;Reply hazy try again&#39;
elif answerNumber == 5:
    return &#39;Ask again later&#39;
elif answerNumber == 6:
    return &#39;Concentrate and ask again&#39;
elif answerNumber == 7:
    return &#39;My reply is no&#39;
elif answerNumber == 8:
    return &#39;Outlook not so good&#39;
elif answerNumber == 9:
    return &#39;Very doubtful&#39;

r = random.randint(1, 9)
fortune = getAnswer(r)
print(fortune)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is decidedly so&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;# NONE å¼&lt;/p&gt;

&lt;p&gt;print å¼ è¿å None
 å¦å r ç side effect
 å°æ¼ææ²æå¯«returné³è¿°å¥çå½æ¸,pythoné½æå ä¸return None&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;spam = print(&#39;Hello!&#39;)
None == spam
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Hello!





True
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ååè®æ¸ä¸è½ä½¿ç¨å¨å¨åä½ç¨ç¯åå§&#34;&gt;ååè®æ¸ä¸è½ä½¿ç¨å¨å¨åä½ç¨ç¯åå§&lt;/h2&gt;

&lt;p&gt;(è·rä¸æ¨£)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def spam():
    eggs = 31337
spam()
print(eggs)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------

NameError                                 Traceback (most recent call last)

&amp;lt;ipython-input-8-c77831cffe5d&amp;gt; in &amp;lt;module&amp;gt;()
      2     eggs = 31337
      3 spam()
----&amp;gt; 4 print(eggs)


NameError: name &#39;eggs&#39; is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;local-scopes-cannot-use-variables-in-other-local-scopes&#34;&gt;Local Scopes Cannot Use Variables in Other Local Scopes&lt;/h2&gt;

&lt;p&gt;The upshot is that local variables in one function are completely separate from the local variables in another function.&lt;/p&gt;

&lt;p&gt;æåå½å¼ä¸­çååè®æ¸èå¶ä»å½å¼ä¸­çååè®æ¸æ¯å®å¨åéä¾ç,å°±ç®åç¨±ç¸åä¹å®å¨ä¸ç¸å¹²&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def spam():
    eggs = 99
    bacon()
    print(eggs)
def bacon():
    ham = 101
    eggs = 0
    
spam()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;99
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gobal-é³è¿°å¥&#34;&gt;gobal é³è¿°å¥&lt;/h2&gt;

&lt;p&gt;If you need to modify a global variable from within a function, use the global statement. If you have a line such as global eggs at the top of a function, it tells Python, âIn this function, eggs refers to the global variable, so donât create a local variable with this name.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def spam():
    global eggs
    eggs = &#39;spam&#39;

print(eggs)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;spam
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are four rules to tell whether a variable is in a local scope or global scope:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If there is a global statement for that variable in a function, it is a global variable.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;But if the variable is not used in an assignment statement, it is a global variable.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;for example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def spam():
    global eggs    
    eggs = &#39;spam&#39; # this is the global
def bacon():
    eggs = &#39;bacon&#39; # this is a local
def ham():
    print(eggs) # this is the global
eggs = 42 # this is the global
spam()
print(eggs)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;spam
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the spam() function, eggs is the global eggs variable, because thereâs a global statement for eggs at the beginning of the function &lt;code&gt;1&lt;/code&gt;. In bacon(), eggs is a local variable, because thereâs an assignment statement for it in that function &lt;code&gt;2&lt;/code&gt;. In ham() &lt;code&gt;3&lt;/code&gt;, eggs is the global variable, because there is no assignment statement or global statement for it in that function.&lt;/p&gt;

&lt;h2 id=&#34;ä¾å¤èç&#34;&gt;ä¾å¤èç&lt;/h2&gt;

&lt;p&gt;python ç¨å¼ä¸­è¥æé¯èª¤(error),æä¾å¤(exception)å°è´æ´åç¨å¼ç¶æ,èæåä¸¦ä¸å¸æç¼çéæ¨£çäº&lt;/p&gt;

&lt;p&gt;ï½ï½ï¼ï¼»é¤ä»¥ï¼ï¼½&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def spam(divideBy):
    return 42 / divideBy

print(spam(2))
print(spam(12))
print(spam(0))
print(spam(1))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;21.0
3.5



---------------------------------------------------------------------------

ZeroDivisionError                         Traceback (most recent call last)

&amp;lt;ipython-input-15-cce18d473349&amp;gt; in &amp;lt;module&amp;gt;()
      4 print(spam(2))
      5 print(spam(12))
----&amp;gt; 6 print(spam(0))
      7 print(spam(1))


&amp;lt;ipython-input-15-cce18d473349&amp;gt; in spam(divideBy)
      1 def spam(divideBy):
----&amp;gt; 2     return 42 / divideBy
      3 
      4 print(spam(2))
      5 print(spam(12))


ZeroDivisionError: division by zero
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;å©ç¨tryåexcepté³è¿°å¥ä¾èç,ææå¯è½åºé¯çé³è¿°å¥æ¾å¨tryå­å¥ç¶ä¸­,&lt;/p&gt;

&lt;p&gt;ç¶é¯èª¤ç¼çæ,ç¨å¼çå·è¡æè·³å°æ¥ä¸ä¾çexceptå­å¥èµ·å§è&lt;/p&gt;

&lt;p&gt;æåé¢é¤ä»¥0çç¨å¼ç¢¼æ¾å¨tryå­å¥ä¸­,èexceptå­å¥ä¸­å¯«å¥ç¨å¼ç¢¼ä¾èçé¯èª¤ç¼çææ³è¦åçäº&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def spam(divideBy):
    try:
        return 42 / divideBy
    except ZeroDivisionError:
        print(&#39;Error: Invalid argument.&#39;)

print(spam(2))
print(spam(12))
print(spam(0))
print(spam(1))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;21.0
3.5
Error: Invalid argument.
None
42.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;å°åä¾å­-çæ¸å­éæ²&#34;&gt;å°åä¾å­ :çæ¸å­éæ²&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# This is a guess the number game.
import random
secretNumber = random.randint(1, 20)
print(&#39;I am thinking of a number between 1 and 20.&#39;)

# Ask the player to guess 6 times.
for guessesTaken in range(1, 7):
    print(&#39;Take a guess.&#39;)
    guess = int(input())

    if guess &amp;lt; secretNumber:
        print(&#39;Your guess is too low.&#39;)
    elif guess &amp;gt; secretNumber:
        print(&#39;Your guess is too high.&#39;)
    else:
        break    # This condition is the correct guess!

if guess == secretNumber:
    print(&#39;Good job! You guessed my number in &#39; + str(guessesTaken) + &#39; guesses!&#39;)
else:
    print(&#39;Nope. The number I was thinking of was &#39; + str(secretNumber))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;I am thinking of a number between 1 and 20.
Take a guess.
10
Your guess is too high.
Take a guess.
1
Your guess is too low.
Take a guess.
5
Your guess is too low.
Take a guess.
8
Your guess is too low.
Take a guess.
9
Good job! You guessed my number in 5 guesses!
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Note-functional</title>
      <link>/r/advanced_r/functional/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/r/advanced_r/functional/</guid>
      <description>


&lt;p&gt;Content comes from &lt;a href=&#34;https://adv-r.hadley.nz/&#34; class=&#34;uri&#34;&gt;https://adv-r.hadley.nz/&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;functional&lt;/strong&gt; is a function that takes a function as an input and returns a vector as output. Hereâs a simple functional: it calls the function provided as input with 1000 random uniform numbers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;randomise &amp;lt;- function(f) f(runif(1e3))
randomise(mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.4795872&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;randomise(mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.4995242&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;randomise(sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 489.3286&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This chapter will focus on functionals provided by the purrr package&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;triple &amp;lt;- function(x) x * 3
map(1:3, triple)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## [1] 3
## 
## [[2]]
## [1] 6
## 
## [[3]]
## [1] 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¦ä¸å: &lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/f0494d020aa517ae7b1011cea4c4a9f21702df8b/2577b/diagrams/functionals/map.png&#34; width=&#34;260&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;map function åå³ list&lt;/p&gt;
&lt;p&gt;ä¸é¢map__*ååå³ç¹å®çatomic vector&lt;/p&gt;
&lt;p&gt;These examples rely on two facts: mtcars is a data frame, and data frames are lists containing vectors of the same length. This is more obvious if we draw a data frame with the same orientation as vector: &lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/12f6af8404d9723dff9cc665028a35f07759299d/d0d9a/diagrams/functionals/map-list.png&#34; width=&#34;335&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# map_chr() always returns a character vector
map_chr(mtcars, typeof)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      mpg      cyl     disp       hp     drat       wt     qsec       vs 
## &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; 
##       am     gear     carb 
## &amp;quot;double&amp;quot; &amp;quot;double&amp;quot; &amp;quot;double&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# map_lgl() always returns a logical vector
map_lgl(mtcars, is.double)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb 
## TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# map_int() always returns a integer vector
n_unique &amp;lt;- function(x) length(unique(x))
map_int(mtcars, n_unique)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb 
##   25    3   27   22   22   29   30    2    2    3    6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# map_dbl() always returns a double vector
map_dbl(mtcars, mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        mpg        cyl       disp         hp       drat         wt 
##  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250 
##       qsec         vs         am       gear       carb 
##  17.848750   0.437500   0.406250   3.687500   2.812500&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;anonymous-functions-and-shortcuts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Anonymous functions and shortcuts&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_dbl(mtcars, function(x) length(unique(x)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb 
##   25    3   27   22   22   29   30    2    2    3    6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç°¡åå¯«æ³:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_dbl(mtcars, ~ length(unique(.x)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb 
##   25    3   27   22   22   29   30    2    2    3    6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä»¥ä¸å¯«æ³éå¸¸ç¨ä¾ç¢çdata:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- map(1:3, ~runif(2))
str(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## List of 3
##  $ : num [1:2] 0.717 0.566
##  $ : num [1:2] 0.683 0.087
##  $ : num [1:2] 0.105 0.821&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The map functions for extracting elements from a vector , You can use a character vector to select elements by name, an integer vector to select by position, or a list to select by both name and position.These are very useful for working with deeply nested lists, which often arise when working with JSON.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- list(
  list(-1, x = 1, y = c(2), z = &amp;quot;a&amp;quot;),
  list(-2, x = 4, y = c(5, 6), z = &amp;quot;b&amp;quot;),
  list(-3, x = 8, y = c(9, 10, 11))
)

# Select by name
map_dbl(x, &amp;quot;x&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 4 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; [1] 1 4 8

# Or by position
map_dbl(x, 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -1 -2 -3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; [1] -1 -2 -3

# Or by both
map_dbl(x, list(&amp;quot;y&amp;quot;, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2 5 9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; [1] 2 5 9

# You&amp;#39;ll get an error if a component doesn&amp;#39;t exist:
#map_chr(x, &amp;quot;z&amp;quot;)
#&amp;gt; Error: Result 3 must be a single string, not NULL of length 0

# Unless you supply a .default value
map_chr(x, &amp;quot;z&amp;quot;, .default = NA)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;passing-arguments-with-...&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Passing arguments with &lt;code&gt;...&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Itâs often convenient to pass along additional arguments to the function that youâre calling. For example, you might want to pass na.rm = TRUE along to mean(). One way to do that is with an anonymous function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Y &amp;lt;- list(1:5, c(1:10, NA))
map_dbl(Y, ~ mean(.x, na.rm = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.0 5.5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But because the map functions pass &lt;code&gt;...&lt;/code&gt; along, thereâs a simpler form available:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_dbl(x, mean, na.rm = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:
## returning NA

## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:
## returning NA

## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:
## returning NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA NA NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;map(ç´è§å:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/e1b3536a7556aef348f546a79277125c419a5fdc/0c0a1/diagrams/functionals/map-arg.png&#34; width=&#34;359&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/a468c847ea8aca9a6131492e1e7431f418259eaf/ce4e0/diagrams/functionals/map-arg-recycle.png&#34; width=&#34;345&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note thereâs a subtle difference between placing extra arguments inside an anonymous function compared with passing them to map(). Putting them in an anonymous function means that they will be evaluated every time f() is executed, not just once when you call map(). This is easiest to see if we make the additional argument random:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plus &amp;lt;- function(x, y) x + y

x &amp;lt;- c(1, 2, 3, 4)
map_dbl(x, plus, runif(1))# runif(1) åªä½¿ç¨ä¸æ¬¡ççµæ&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.418254 2.418254 3.418254 4.418254&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_dbl(x, ~ plus(.x, runif(1))) #xé·åº¦4,æä»¥ä½¿ç¨4æ¬¡runif(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.817459 2.751080 3.110654 4.784998&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;varying-another-argument&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Varying another argument&lt;/h2&gt;
&lt;p&gt;How do you get the result in this picture?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/6d0b927ba5266f886cc721ae090afcc5e872a748/f8636/diagrams/functionals/map-arg-flipped.png&#34; width=&#34;359&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It turns out that thereâs no way to do it directly, but there are two tricks you can use instead. To illustrate them, imagine I have a vector that contains a few unusual values, and I want to explore the effect of different amounts of trimming when computing the mean. In this case, the first argument to &lt;code&gt;mean()&lt;/code&gt; will be constant, and I want to vary the second argument, &lt;code&gt;trim&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trims &amp;lt;- c(0, 0.1, 0.2, 0.5)
x &amp;lt;- rcauchy(1000)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;The simplest technique is to use an anonymous function to rearrange the argument order:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_dbl(trims, ~ mean(x, trim = .x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  1.35783317 -0.03810824 -0.02663545 -0.01582844&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#or
map_dbl(trims, function(trim) mean(x, trim = trim))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  1.35783317 -0.03810824 -0.02663545 -0.01582844&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;purrr-style&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Purrr style&lt;/h2&gt;
&lt;p&gt;Before we go on to explore more map variants, letâs take a quick look at how you tend to use multiple purrr functions to solve a moderately realistic problem: fitting a model to each subgroup and extracting a coefficient of the model. For this toy example, Iâm going to break the &lt;code&gt;mtcars&lt;/code&gt; data set down into groups defined by the number of cylinders, using the base &lt;code&gt;split&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;by_cyl &amp;lt;- split(mtcars, mtcars$cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This creates a list of three data frames: the cars with 4, 6, and 8 cylinders respectively.&lt;/p&gt;
&lt;p&gt;Now imagine we want to fit a linear model, then extract the second coefficient (i.e.Â the slope). The following code shows how you might do that with purrr:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;by_cyl %&amp;gt;% 
  map(function(x) lm(mpg ~ wt, data = x)) %&amp;gt;% #(or map(~ lm(mpg ~ wt, data = .x)))
  map(coef) %&amp;gt;% 
  map_dbl(2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         4         6         8 
## -5.647025 -2.780106 -2.192438&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åä»¥ä¸å¯«æ³:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;by_cyl %&amp;gt;% 
  lapply(function(data) lm(mpg ~ wt, data = data)) %&amp;gt;% 
  lapply(coef) %&amp;gt;% 
  vapply(function(x) x[[2]], double(1))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         4         6         8 
## -5.647025 -2.780106 -2.192438&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;models &amp;lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))
vapply(models, function(x) coef(x)[[2]], double(1))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         4         6         8 
## -5.647025 -2.780106 -2.192438&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;intercepts &amp;lt;- double(length(by_cyl))
for (i in seq_along(by_cyl)) {
  model &amp;lt;- lm(mpg ~ wt, data = by_cyl[[i]])
  intercepts[[i]] &amp;lt;- coef(model)[[2]]
}
intercepts&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -5.647025 -2.780106 -2.192438&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;map-variants&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Map variants&lt;/h2&gt;
&lt;p&gt;five new ideas:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Output same type as input with modify()&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Iterate over two inputs with map2().&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Iterate with an index using imap()&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Return nothing with walk().&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Iterate over any number of inputs with pmap().&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The map family of functions has orthogonal input and outputs, meaning that we can organise all the family into a matrix, with inputs in the rows and outputs in the columns. Once youâve mastered the idea in a row, you can combine it with any column; once youâve mastered the idea in a column, you can combine it with any row. That relationship is summarised in the following table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;
&lt;/th&gt;
&lt;th&gt;
List
&lt;/th&gt;
&lt;th&gt;
Atomic
&lt;/th&gt;
&lt;th&gt;
Same type
&lt;/th&gt;
&lt;th&gt;
Nothing
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;
One argument
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;map()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;map_lgl()&lt;/code&gt;, â¦
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;modify()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;walk()&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;
Two arguments
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;map2()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;map2_lgl()&lt;/code&gt;, â¦
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;modify2()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;walk2()&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;
One argument + index
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;imap()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;imap_lgl()&lt;/code&gt;, â¦
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;imodify()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;iwalk()&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;
N arguments
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;pmap()&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;pmap_lgl()&lt;/code&gt;, â¦
&lt;/td&gt;
&lt;td&gt;
â
&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;pwalk()&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;modify&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1. modify()&lt;/h3&gt;
&lt;p&gt;Imagine you wanted to double every column in a data frame. You might first try using &lt;code&gt;map()&lt;/code&gt;, but &lt;code&gt;map()&lt;/code&gt; always returns a list:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(
  x = 1:3,
  y = 6:4
)

map(df, function(x) x * 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $x
## [1] 2 4 6
## 
## $y
## [1] 12 10  8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to keep the output as a data frame, you can use modify(), which always returns the same type of output as the input:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;modify(df, function(x) x * 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   x  y
## 1 2 12
## 2 4 10
## 3 6  8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;modify()&lt;/code&gt; doesnât modify in place, it returns a modified copy, so if you wanted to permanently modify df, youâd need to assign it:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- modify(df, ~ .x * 2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;two-inputs-map2-and-friends&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2. Two inputs: map2() and friends&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;map()&lt;/code&gt; is vectorised over a single argument, &lt;code&gt;.x.&lt;/code&gt; This means it only varies &lt;code&gt;.x&lt;/code&gt; when calling &lt;code&gt;.f&lt;/code&gt;, and all other arguments are passed along unchanged &lt;/em&gt;, thus making it poorly suited for some problems. For example, how would you find a weighted mean when you have a list of observations and a list of weights? Imagine we have the following data:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;xs &amp;lt;- map(1:8, ~ runif(10))
xs[[1]][[1]] &amp;lt;- NA
ws &amp;lt;- map(1:8, ~ rpois(10, 5) + 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use map_dbl() to compute the unweighted means:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_dbl(xs, mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]        NA 0.5666972 0.4602577 0.4992502 0.4921310 0.2669330 0.3749631
## [8] 0.5038035&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But passing ws as an additional argument doesnât work because arguments after &lt;code&gt;.f&lt;/code&gt;are not transformed:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_dbl(xs, weighted.mean, w = ws)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error in weighted.mean.default(.x[[i]], ...): &amp;#39;x&amp;#39; and &amp;#39;w&amp;#39; must have the same length&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/a468c847ea8aca9a6131492e1e7431f418259eaf/ce4e0/diagrams/functionals/map-arg-recycle.png&#34; width=&#34;345&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;We need a new tool: a &lt;code&gt;map2()&lt;/code&gt;, which is vectorised over two arguments. This means both &lt;code&gt;.x&lt;/code&gt; and &lt;code&gt;.y&lt;/code&gt; are varied in each call to &lt;code&gt;.f&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map2_dbl(xs, ws, weighted.mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]        NA 0.5397401 0.4812376 0.4906383 0.4924670 0.2460135 0.3957910
## [8] 0.5187214&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/f5cddf51ec9c243a7c13732b0ce46b0868bf8a31/501a8/diagrams/functionals/map2.png&#34; width=&#34;368&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The arguments to &lt;code&gt;map2()&lt;/code&gt; are slightly different to the arguments to &lt;code&gt;map()&lt;/code&gt; as two vectors come before the function, rather than one. Additional arguments still go afterwards:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map2_dbl(xs, ws, weighted.mean, na.rm = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.6571414 0.5397401 0.4812376 0.4906383 0.4924670 0.2460135 0.3957910
## [8] 0.5187214&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/7a545699ff7069a98329fcfbe6e42b734507eb16/211a5/diagrams/functionals/map2-arg.png&#34; width=&#34;453&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of the big differences between map2() and the simple function above is that map2() recycles its inputs to make sure that theyâre the same length:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/55032525ec77409e381dcd200a47e1787e65b964/dcaef/diagrams/functionals/map2-recycle.png&#34; width=&#34;368&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;no-outputs-walk-and-friends&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3. No outputs: walk() and friends&lt;/h3&gt;
&lt;p&gt;Most functions are called for the value that they return, so it makes sense to capture and store the value with a map() function. But some functions are called primarily for their side-effects (e.g.Â cat(), write.csv(), or ggsave()) and it doesnât make sense to capture their results. Take this simple example that displays a welcome message using cat(). cat() returns NULL, so while map() works (in the sense that it generates the desired welcomes), it also returns list(NULL, NULL).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;welcome &amp;lt;- function(x) {
  cat(&amp;quot;Welcome &amp;quot;, x, &amp;quot;!\n&amp;quot;, sep = &amp;quot;&amp;quot;)
}
names &amp;lt;- c(&amp;quot;Hadley&amp;quot;, &amp;quot;Jenny&amp;quot;)

# As well as generate the welcomes, it also shows 
# the return value of cat()
map(names, welcome)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Welcome Hadley!
## Welcome Jenny!&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## NULL
## 
## [[2]]
## NULL&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;purrr provides the walk family of functions that ignore the return values of the .f and instead return .x invisibly&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;walk(names, welcome)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Welcome Hadley!
## Welcome Jenny!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One of the most useful walk() variants is walk2() because a very common side-effect is saving something to disk, and when saving something to disk you always have a pair of values: the object and the path that you want to save it to. &lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/19d5f7d265107c81dded3e98319d48ec01821308/b8621/diagrams/functionals/walk2.png&#34; width=&#34;316&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;
For example, imagine you have a list of data frames (which Iâve created here using &lt;code&gt;split()&lt;/code&gt;), and youâd like to save each one to a separate CSV file. Thatâs easy with &lt;code&gt;walk2()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp &amp;lt;- tempfile()
dir.create(temp)

cyls &amp;lt;- split(mtcars, mtcars$cyl)
paths &amp;lt;- file.path(temp, paste0(&amp;quot;cyl-&amp;quot;, names(cyls), &amp;quot;.csv&amp;quot;))
walk2(cyls, paths, write.csv)

dir(temp)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;cyl-4.csv&amp;quot; &amp;quot;cyl-6.csv&amp;quot; &amp;quot;cyl-8.csv&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Here the &lt;code&gt;walk2()&lt;/code&gt; is equivalent to &lt;code&gt;write.csv(cyls[[1]], paths[[1]])&lt;/code&gt;, &lt;code&gt;write.csv(cyls[[2]], paths[[2]])&lt;/code&gt;, &lt;code&gt;write.csv(cyls[[3]], paths[[3]])&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;iterating-over-values-and-indices-imap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;4. Iterating over values and indices imap&lt;/h3&gt;
&lt;p&gt;
There are three basic ways to loop over a vector with a for loop:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
Loop over the elements: &lt;code&gt;for (x in xs)&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
Loop over the numeric indices: &lt;code&gt;for (i in seq_along(xs))&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
Loop over the names: &lt;code&gt;for (nm in names(xs))&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The first form is analogous to the &lt;code&gt;map()&lt;/code&gt; family. The second and third forms are equivalent to the &lt;code&gt;imap()&lt;/code&gt; family which allows you to iterate over the values and the indices of a vector in parallel.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;imap()&lt;/code&gt; is like &lt;code&gt;map2()&lt;/code&gt; in the sense that your &lt;code&gt;.f&lt;/code&gt; gets called with two arguments, but here both are derived from the vector. &lt;code&gt;imap(x, f)&lt;/code&gt; is equivalent to &lt;code&gt;map2(x, names(x), f)&lt;/code&gt; if x has names, and &lt;code&gt;map2(x, seq_along(x), f)&lt;/code&gt; if it does not.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;imap()&lt;/code&gt; is often useful for constructing labels:
&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;imap_chr(iris, ~ paste0(&amp;quot;The first value of &amp;quot;, .y, &amp;quot; is &amp;quot;, .x[[1]]))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                             Sepal.Length 
## &amp;quot;The first value of Sepal.Length is 5.1&amp;quot; 
##                              Sepal.Width 
##  &amp;quot;The first value of Sepal.Width is 3.5&amp;quot; 
##                             Petal.Length 
## &amp;quot;The first value of Petal.Length is 1.4&amp;quot; 
##                              Petal.Width 
##  &amp;quot;The first value of Petal.Width is 0.2&amp;quot; 
##                                  Species 
##   &amp;quot;The first value of Species is setosa&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the vector is unnamed, the second argument will be the index:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- map(1:6, ~ sample(1000, 10))
imap_chr(x, ~ paste0(&amp;quot;The highest value of &amp;quot;, .y, &amp;quot; is &amp;quot;, max(.x)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;The highest value of 1 is 898&amp;quot; &amp;quot;The highest value of 2 is 804&amp;quot;
## [3] &amp;quot;The highest value of 3 is 965&amp;quot; &amp;quot;The highest value of 4 is 923&amp;quot;
## [5] &amp;quot;The highest value of 5 is 694&amp;quot; &amp;quot;The highest value of 6 is 926&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;code&gt;imap()&lt;/code&gt; is a useful helper if you want to work with the values in a vector along with their positions.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;any-number-of-inputs-pmap-and-friends&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;5. Any number of inputs: pmap() and friends&lt;/h3&gt;
&lt;p&gt;
Since we have &lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;map2()&lt;/code&gt;, you might expect &lt;code&gt;map3()&lt;/code&gt;, &lt;code&gt;map4()&lt;/code&gt;, &lt;code&gt;map5()&lt;/code&gt;, â¦ But where would you stop? Instead of generalising &lt;code&gt;map2()&lt;/code&gt; to an arbitrary number of arguments, purrr takes a slightly different tack with &lt;code&gt;pmap()&lt;/code&gt;: you supply it a single list, which contains any number of arguments. In most cases, that will be a list of equal-length vectors, i.e.Â something very similar to a data frame. In diagrams, Iâll emphasise that relationship by drawing the input similar to a data frame.
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/e426c5755e2e65bdcc073d387775db79791f32fd/92902/diagrams/functionals/pmap.png&#34; width=&#34;354&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;As before, the varying arguments come before .f (although now they must be wrapped in a list), and the constant arguments come afterwards.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pmap_dbl(list(xs, ws), weighted.mean, na.rm = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.6571414 0.5397401 0.4812376 0.4906383 0.4924670 0.2460135 0.3957910
## [8] 0.5187214&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A big difference between pmap() and the other map functions is that pmap() gives you much finer control over argument matching because you can name the components of the list. Returning to our example from Section 9.2.5, where we wanted to vary the trim argument to x, we could instead use pmap():&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trims &amp;lt;- c(0, 0.1, 0.2, 0.5)
x &amp;lt;- rcauchy(1000)

pmap_dbl(list(trim = trims), mean, x = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  0.845148843  0.021685955 -0.041037156  0.009822087&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think itâs good practice to name the components of the list to make it very clear how the function will be called.&lt;/p&gt;
&lt;p&gt;Itâs often convenient to call pmap() with a data frame. A handy way to create that data frame is with tibble::tribble(), which allows you to describe a data frame row-by-row&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;params &amp;lt;- tibble::tribble(
  ~ n, ~ min, ~ max,
   1L,     0,     1,
   2L,    10,   100,
   3L,   100,  1000
)

pmap(params, runif)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## [1] 0.9599883
## 
## [[2]]
## [1] 52.79904 62.52829
## 
## [[3]]
## [1] 516.7871 270.0912 111.0775&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/e698354d802ce16f83546db63c45a19b8d51f45e/43de7/diagrams/functionals/pmap-3.png&#34; width=&#34;449&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here, the column names are critical: Iâve carefully chosen to match them to the arguments to runif(), so the pmap(params, runif) is equivalent to runif(n = 1L, min = 0, max = 1), runif(n = 2, min = 10, max = 100), runif(n = 3L, min = 100, max = 1000). (If you have a data frame in hand, and the names donât match, use dplyr::rename() or similar.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R(1)- basic vector</title>
      <link>/post/advanced_r/vector/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/advanced_r/vector/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/bd90c87ac98708b1731c92900f2f53ec6a71edaf/ce375/diagrams/name-value/binding-1.png&#34; width=&#34;160&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R(690000)- basic vector</title>
      <link>/reinforcement_learning/advanced_r/vector/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/reinforcement_learning/advanced_r/vector/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/bd90c87ac98708b1731c92900f2f53ec6a71edaf/ce375/diagrams/name-value/binding-1.png&#34; width=&#34;160&#34; style=&#34;display: block; margin: auto;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>regular-expression</title>
      <link>/python/regular-expression/regular_expression/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/python/regular-expression/regular_expression/</guid>
      <description>


&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;å­ååé¡&lt;/th&gt;
&lt;th&gt;è¡¨ç¤º&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;0-9çä»»ä½æ¸å­&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;é¤äº0-9çä»»ä½æ¸å­&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;ä»»ä½å­æ¯,æ¸å­æåºç·&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;é¤äºå­æ¯,æ¸å­æåºç·ä»¥å¤çä»»ä½å­å&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;ç©ºæ ¼,å®ä½ç¬¦èææè¡ç¬¦è&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;é¤äºç©ºæ ¼,å®ä½ç¬¦èææè¡ç¬¦èä»¥å¤çä»»ä½å­å&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;book&#34;&gt;
&lt;ul class=&#34;itemizedlist&#34;&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;?&lt;/code&gt; matches zero or one of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;*&lt;/code&gt; matches zero or more of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;+&lt;/code&gt; matches one or more of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;{n}&lt;/code&gt; matches exactly &lt;span class=&#34;calibre1&#34;&gt;&lt;em class=&#34;calibre5&#34;&gt;n&lt;/em&gt;&lt;/span&gt; of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;{n,}&lt;/code&gt; matches &lt;span class=&#34;calibre1&#34;&gt;&lt;em class=&#34;calibre5&#34;&gt;n&lt;/em&gt;&lt;/span&gt; or more of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;{,m}&lt;/code&gt; matches 0 to &lt;span class=&#34;calibre1&#34;&gt;&lt;em class=&#34;calibre5&#34;&gt;m&lt;/em&gt;&lt;/span&gt; of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;{n,m}&lt;/code&gt; matches at least &lt;span class=&#34;calibre1&#34;&gt;&lt;em class=&#34;calibre5&#34;&gt;n&lt;/em&gt;&lt;/span&gt; and at most &lt;span class=&#34;calibre1&#34;&gt;&lt;em class=&#34;calibre5&#34;&gt;m&lt;/em&gt;&lt;/span&gt; of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
&lt;code class=&#34;literal1&#34;&gt;{n,m}?&lt;/code&gt; or &lt;code class=&#34;literal1&#34;&gt;*?&lt;/code&gt; or &lt;code class=&#34;literal1&#34;&gt;+?&lt;/code&gt; performs a nongreedy match of the preceding group.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
&lt;code class=&#34;literal1&#34;&gt;^spam&lt;/code&gt; means the string must begin with &lt;span class=&#34;calibre1&#34;&gt;&lt;em class=&#34;calibre5&#34;&gt;spam&lt;/em&gt;&lt;/span&gt;.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
&lt;code class=&#34;literal1&#34;&gt;spam$&lt;/code&gt; means the string must end with &lt;span class=&#34;calibre1&#34;&gt;&lt;em class=&#34;calibre5&#34;&gt;spam&lt;/em&gt;&lt;/span&gt;.
&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;listitem&#34;&gt;
&lt;p class=&#34;calibre4&#34;&gt;
The &lt;code class=&#34;literal1&#34;&gt;.&lt;/code&gt; matches any character, except newline characters.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;\d, \w, and \s match a digit, word, or space character, respectively.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;\D, \W, and \S match anything except a digit, word, or space character, respectively.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[abc] matches any character between the brackets (such as a, b, or c).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[^abc] matches any character that isnât between the brackets.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;python--re&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;python æ­£è¦è¡¨éå¼ é½å¨reæ¨¡çµ&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;import re&lt;/li&gt;
&lt;li&gt;re.complie() å»ºç« Regexç©ä»¶ (è¨å¾ä½¿ç¨åå§å­ä¸² (r))&lt;/li&gt;
&lt;li&gt;å° Regex ç©ä»¶ç search() æ¹æ³å³å¥æ³è¦å°æ¾çå­ä¸²,æè¿åä¸åMatchç©ä»¶&lt;/li&gt;
&lt;li&gt;å¼å«Matchç©ä»¶çgroup()æ¹æ³,è¿åå¯¦éæ¯å°ç¬¦åçå­ä¸²&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import re

phoneNumRegex = re.compile(r&amp;#39;\d\d\d-\d\d\d-\d\d\d\d&amp;#39;)
mo = phoneNumRegex.search(&amp;#39;My number is 415-555-4242.&amp;#39;)
print(&amp;#39;Phone number found: &amp;#39; + mo.group())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Phone number found: 415-555-4242&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æåæ³è¦æååèç¢¼å¾é»è©±èç¢¼ä¸­åé,å¯å¨æ­£è¦è¡¨éå¼ä¸­å ä¸æ¬èä¾åçµ:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(\d\d\d)-(\d\d\d-\d\d\d\d)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;é¨å¾ä½¿ç¨ group() æ¹æ³å¾æååçµä¸­åå¾æ¯å°ç¬¦åçæå­&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;phoneNumRegex = re.compile(r&amp;#39;(\d\d\d)-(\d\d\d-\d\d\d\d)&amp;#39;)
mo = phoneNumRegex.search(&amp;#39;My number is 415-555-4242.&amp;#39;)
mo.group(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;415&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo.group(2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;555-4242&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo.group(0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;415-555-4242&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;415-555-4242&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ³è¦ä¸æ¬¡åå¾ææçåçµ,å¯ç¨groups()æ¹æ³&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo.groups()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (&amp;#39;415&amp;#39;, &amp;#39;555-4242&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;areaCode,mainNumber = mo.groups()
print(areaCode)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 415&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(mainNumber)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 555-4242&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ³è¦å¨å­ä¸²ä¸­æ¯å°æ¬è,ä½¿ç¨&lt;code&gt;\(&lt;/code&gt; å &lt;code&gt;\)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;å¨å³å¥ re.compile()çåå§å­ä¸²å§ç&lt;code&gt;\(&lt;/code&gt; å &lt;code&gt;\)&lt;/code&gt;æè®å¾å¯¦éæ¯å°()æ¬è&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;phoneNumRegex = re.compile(r&amp;#39;(\(\d\d\d\)) (\d\d\d-\d\d\d\d)&amp;#39;)
mo = phoneNumRegex.search(&amp;#39;My phone number is (415) 555-4242.&amp;#39;)
mo.group(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;(415)&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo.group(2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;555-4242&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;matching-multiple-groups-with-the-pipe&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Matching Multiple Groups with the Pipe&lt;/h4&gt;
&lt;p&gt;æ­£è¦è¡¨éå¼ râBatman|Tina Feyâ ææ¯å° âBatmanâ æ âTina Feyâ&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;heroRegex = re.compile (r&amp;#39;Batman|Tina Fey&amp;#39;)
mo1 = heroRegex.search(&amp;#39;Batman and Tina Fey.&amp;#39;)
mo1.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ³è¦æ¯å°âBatmanâ, âBatmobileâ, âBatcopterâ, âBatbatâ ä¸­ä»»ä¸åé½ç¬¦å,å çºé½ä»¥âBatâéé ­ æä»¥åªè¦æå®ä¸æ¬¡åç½®æå­å³å¯,å©ç¨æ¬è&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;batRegex = re.compile(r&amp;#39;Bat(man|mobile|copter|bat)&amp;#39;)
mo = batRegex.search(&amp;#39;Batmobile lost a wheel&amp;#39;)
mo.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batmobile&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo.group(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;mobile&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;optional-matching-with-the-question-mark&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Optional Matching with the Question Mark&lt;/h4&gt;
&lt;p&gt;åèè¡¨ç¤ºç¡è«å§å®¹æ¯å¦å­å¨,æ­£è¦è¡¨éå¼é½ææ¯å°ç¬¦å&lt;/p&gt;
&lt;p&gt;?å­åè¡¨ç¤ºä»åé¢æ¬èçåçµå¨éæ¨¡å¼ä¸­æ¯å¯é¸ææ§ç&lt;/p&gt;
&lt;p&gt;?å­åå¯çæ &lt;strong&gt;éååèåçåçµæ¯å°ç¬¦å1æ¬¡æ0æ¬¡&lt;/strong&gt;é½å¯ä»¥&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;batRegex = re.compile(r&amp;#39;Bat(wo)?man&amp;#39;)
mo1 = batRegex.search(&amp;#39;The Adventures of Batman&amp;#39;)
mo1.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo2 = batRegex.search(&amp;#39;The Adventures of Batwoman&amp;#39;)
mo2.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batwoman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç¨åé¢é»è©±èç¢¼ä¾åèªªæ,å¯å¨æ­£è¦è¡¨éå¼ä¸­å°æ¾å«æåèåä¸å«åèçé»è©±èç¢¼&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;phoneRegex = re.compile(r&amp;#39;(\d\d\d-)?\d\d\d-\d\d\d\d&amp;#39;)
mo1 = phoneRegex.search(&amp;#39;My number is 415-555-4242&amp;#39;)
mo1.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;415-555-4242&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo2 = phoneRegex.search(&amp;#39;My number is 555-4242&amp;#39;)
mo2.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;555-4242&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;matching-zero-or-more-with-the-star&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Matching Zero or More with the Star&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;* &lt;/strong&gt;å­åå¯çæ &lt;strong&gt;éåæèåçåçµæ¯å°ç¬¦åå¤æ¬¡æ0æ¬¡&lt;/strong&gt;é½å¯ä»¥&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;batRegex = re.compile(r&amp;#39;Bat(wo)*man&amp;#39;)
mo1 = batRegex.search(&amp;#39;The Adventures of Batman&amp;#39;)
mo1.group()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo2 = batRegex.search(&amp;#39;The Adventures of Batwoman&amp;#39;)
mo2.group()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batwoman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo3 = batRegex.search(&amp;#39;The Adventures of Batwowowowoman&amp;#39;)
mo3.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batwowowowoman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;matching-one-or-more-with-the-plus&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Matching One or More with the Plus&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;+&lt;/strong&gt;å­åå¯çæ &lt;strong&gt;éå+åçåçµæ¯å°ç¬¦åå¤æ¬¡æ1æ¬¡&lt;/strong&gt;é½å¯ä»¥&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;batRegex = re.compile(r&amp;#39;Bat(wo)+man&amp;#39;)
mo1 = batRegex.search(&amp;#39;The Adventures of Batwoman&amp;#39;)
mo1.group()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batwoman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo2 = batRegex.search(&amp;#39;The Adventures of Batwowowowoman&amp;#39;)
mo2.group()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Batwowowowoman&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo3 = batRegex.search(&amp;#39;The Adventures of Batman&amp;#39;)
mo3 == None&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;matching-specific-repetitions-with-curly-brackets&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Matching Specific Repetitions with Curly Brackets(å¤§æ¬è)&lt;/h4&gt;
&lt;p&gt;(Ha){3} è (Ha)(Ha)(Ha) è¡¨éææç¸å&lt;/p&gt;
&lt;p&gt;(Ha){3,5} è ((Ha)(Ha)(Ha))|((Ha)(Ha)(Ha)(Ha))|((Ha)(Ha)(Ha)(Ha)(Ha)) è¡¨éææç¸å&lt;/p&gt;
&lt;p&gt;(Ha){3,} è¡¨ç¤ºæ¯å°ç¬¦åè³å°3æ¬¡ä»¥ä¸&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;haRegex = re.compile(r&amp;#39;(Ha){3}&amp;#39;)
mo1 = haRegex.search(&amp;#39;HaHaHa&amp;#39;)
mo1.group()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;HaHaHa&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo2 = haRegex.search(&amp;#39;Ha&amp;#39;)
mo2 == None&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;greedy-and-nongreedy-matching&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Greedy and Nongreedy Matching&lt;/h4&gt;
&lt;p&gt;python æ­£è¦è¡¨éå¼é è¨­æ¯greedyçæ¬,å°±æ¯ç¡å¯è½æ¾å°æé·ç¬¦åæ¯å°çå­ä¸²&lt;/p&gt;
&lt;p&gt;å¨å¤§æ¬å¼§å¾é¢å ä¸ä¸ååè,å¤§æ¬å¼§çnon-greedyçæ¬æç¡å¯è½æ¾å°æç­ç¬¦åæ¯å°çå­ä¸²&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;greedyHaRegex = re.compile(r&amp;#39;(Ha){3,5}&amp;#39;)
mo1 = greedyHaRegex.search(&amp;#39;HaHaHaHaHa&amp;#39;)
mo1.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;HaHaHaHaHa&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;nongreedyHaRegex = re.compile(r&amp;#39;(Ha){3,5}?&amp;#39;)
mo2 = nongreedyHaRegex.search(&amp;#39;HaHaHaHaHa&amp;#39;)
mo2.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;HaHaHa&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-findall-method&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;The findall() Method&lt;/h4&gt;
&lt;p&gt;search()æ¹æ³æè¿åä¸åmatchç©ä»¶,æ­¤ç©ä»¶å§å«æå°æ¾æ¯å°å­ä¸²ä¸­&lt;strong&gt;ç¬¬ä¸æ¬¡&lt;/strong&gt;æ¾å°ç¬¦åçæå­&lt;/p&gt;
&lt;p&gt;findall()æ¹æ³åè¿åä¸çµlist,éçµlistçºå°æ¾æ¯å°å­ä¸²ä¸­&lt;strong&gt;ææ&lt;/strong&gt;ç¬¦åçæå­å§å®¹&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;phoneNumRegex = re.compile(r&amp;#39;\d\d\d-\d\d\d-\d\d\d\d&amp;#39;)
mo = phoneNumRegex.search(&amp;#39;Cell: 415-555-9999 Work: 212-555-0000&amp;#39;)
mo.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;415-555-9999&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;phoneNumRegex = re.compile(r&amp;#39;\d\d\d-\d\d\d-\d\d\d\d&amp;#39;) # has no groups
phoneNumRegex.findall(&amp;#39;Cell: 415-555-9999 Work: 212-555-0000&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;415-555-9999&amp;#39;, &amp;#39;212-555-0000&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¦ææåçµ,é£findallæè¿åä¸åå¤åçµ(list of tuples)çlist,æ¯åå¤åçµä»£è¡¨ä¸åæ¯å°ç¬¦åçå§å®¹&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;phoneNumRegex = re.compile(r&amp;#39;(\d\d\d)-(\d\d\d)-(\d\d\d\d)&amp;#39;) # has groups
phoneNumRegex.findall(&amp;#39;Cell: 415-555-9999 Work: 212-555-0000&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [(&amp;#39;415&amp;#39;, &amp;#39;555&amp;#39;, &amp;#39;9999&amp;#39;), (&amp;#39;212&amp;#39;, &amp;#39;555&amp;#39;, &amp;#39;0000&amp;#39;)]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;character-classes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Character Classes&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;å­ååé¡&lt;/th&gt;
&lt;th&gt;è¡¨ç¤º&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;0-9çä»»ä½æ¸å­&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;é¤äº0-9çä»»ä½æ¸å­&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;ä»»ä½å­æ¯,æ¸å­æåºç·&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;é¤äºå­æ¯,æ¸å­æåºç·ä»¥å¤çä»»ä½å­å&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;ç©ºæ ¼,å®ä½ç¬¦èææè¡ç¬¦è&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;é¤äºç©ºæ ¼,å®ä½ç¬¦èææè¡ç¬¦èä»¥å¤çä»»ä½å­å&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;\d is shorthand for the regular expression (0|1|2|3|4|5|6|7|8|9)&lt;/p&gt;
&lt;p&gt;[0-5] is shorthand for the regular expression (0|1|2|3|4|5)&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;xmasRegex = re.compile(r&amp;#39;\d+\s\w+&amp;#39;)
xmasRegex.findall(&amp;#39;12 drummers, 11 pipers, 10 lords, 9 ladies, 8 maids, 7 swans, 6 geese, 5 rings, 4 birds, 3 hens, 2 doves, 1 partridge&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;12 drummers&amp;#39;, &amp;#39;11 pipers&amp;#39;, &amp;#39;10 lords&amp;#39;, &amp;#39;9 ladies&amp;#39;, &amp;#39;8 maids&amp;#39;, &amp;#39;7 swans&amp;#39;, &amp;#39;6 geese&amp;#39;, &amp;#39;5 rings&amp;#39;, &amp;#39;4 birds&amp;#39;, &amp;#39;3 hens&amp;#39;, &amp;#39;2 doves&amp;#39;, &amp;#39;1 partridge&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;making-your-own-character-classes&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Making Your Own Character Classes&lt;/h4&gt;
&lt;p&gt;[a-zA-Z0-9]ææ¯å°æ¾åºææå°å¯«å­æ¯,å¤§å¯«å­æ¯ææ¸å­&lt;/p&gt;
&lt;p&gt;note: å¨ä¸­æ¬èå§çæ®éæ­£è¦è¡¨éå¼ä¸æè¢«è§£éå·è¡&lt;/p&gt;
&lt;p&gt;ex:[0-5.] ææ¯å°æ¾åº0å°5çæ¸å­åå¥é»,æåä¸éè¦å¯«æ [0-5.]&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;vowelRegex = re.compile(r&amp;#39;[aeiouAEIOU]&amp;#39;)
vowelRegex.findall(&amp;#39;Robocop eats baby food. BABY FOOD.&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;o&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;A&amp;#39;, &amp;#39;O&amp;#39;, &amp;#39;O&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;^ å¯åå¾ æ¯å°æ¾åºä¸å¨éåå­ååé¡ä»¥å¤çææå­å&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;consonantRegex = re.compile(r&amp;#39;[^aeiouAEIOU]&amp;#39;)
consonantRegex.findall(&amp;#39;Robocop eats baby food. BABY FOOD.&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;R&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;p&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;t&amp;#39;, &amp;#39;s&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;y&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;.&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;Y&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;F&amp;#39;, &amp;#39;D&amp;#39;, &amp;#39;.&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-and-characters&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;The ^ and $ Characters&lt;/h4&gt;
&lt;p&gt;râ^Helloâ æ¯è¦æ¯å°æ¾åºç¬¦åâHelloâçºèµ·å§çå­ä¸²&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;beginsWithHello = re.compile(r&amp;#39;^Hello&amp;#39;)
beginsWithHello.search(&amp;#39;Hello world!&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;_sre.SRE_Match object; span=(0, 5), match=&amp;#39;Hello&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;beginsWithHello.search(&amp;#39;He said hello.&amp;#39;) == None&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;râ\d$â æ¯è¦æ¯å°æ¾åºç¬¦åä»¥æ¸å­0å°9çºçµå°¾çå­ä¸²&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;endsWithNumber = re.compile(r&amp;#39;\d$&amp;#39;)
endsWithNumber.search(&amp;#39;Your number is 42&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;_sre.SRE_Match object; span=(16, 17), match=&amp;#39;2&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;endsWithNumber.search(&amp;#39;Your number is forty two.&amp;#39;) == None&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;râ^+$â æ¯è¦æ¯å°æ¾åºè³å°ä¸åç¬¦åä»¥éé ­å°çµå°¾é½æ¯æ¸å­0å°9çå­ä¸²&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;wholeStringIsNum = re.compile(r&amp;#39;^\d+$&amp;#39;)
wholeStringIsNum.search(&amp;#39;1234567890&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;_sre.SRE_Match object; span=(0, 10), match=&amp;#39;1234567890&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;wholeStringIsNum.search(&amp;#39;12345xyz67890&amp;#39;) == None&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;wholeStringIsNum.search(&amp;#39;12 34567890&amp;#39;) == None&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-wildcard-character-.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;The Wildcard Character è¬ç¨å­å.&lt;/h4&gt;
&lt;p&gt;. å­åæ¯è¬ç¨å­å,å°æ¾é¤äºæè¡ç¬¦èçææå­å&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;atRegex = re.compile(r&amp;#39;.at&amp;#39;)
atRegex.findall(&amp;#39;The cat in the hat sat on the flat mat.&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;cat&amp;#39;, &amp;#39;hat&amp;#39;, &amp;#39;sat&amp;#39;, &amp;#39;lat&amp;#39;, &amp;#39;mat&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;matching-everything-with-dot-star-.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Matching Everything with Dot-Star ä½¿ç¨.*å°æ¾ææå­å&lt;/h4&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;nameRegex = re.compile(r&amp;#39;First Name: (.*) Last Name: (.*)&amp;#39;)
mo = nameRegex.search(&amp;#39;First Name: Al Last Name: Sweigart&amp;#39;)
mo.group(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Al&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;mo.group(2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Sweigart&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;greedy and non-greedy&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;nongreedyRegex = re.compile(r&amp;#39;&amp;lt;.*?&amp;gt;&amp;#39;)
mo = nongreedyRegex.search(&amp;#39;&amp;lt;To serve man&amp;gt; for dinner.&amp;gt;&amp;#39;)
mo.group()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;&amp;lt;To serve man&amp;gt;&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;greedyRegex = re.compile(r&amp;#39;&amp;lt;.*&amp;gt;&amp;#39;)
mo = greedyRegex.search(&amp;#39;&amp;lt;To serve man&amp;gt; for dinner.&amp;gt;&amp;#39;)
mo.group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;&amp;lt;To serve man&amp;gt; for dinner.&amp;gt;&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;æ¯å°ææå­å,åæ¬æè¡å­å&lt;/h4&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;noNewlineRegex = re.compile(&amp;#39;.*&amp;#39;)
noNewlineRegex.search(&amp;#39;Serve the public trust.\nProtect the innocent.\nUphold the law.&amp;#39;).group()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Serve the public trust.&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;newlineRegex = re.compile(&amp;#39;.*&amp;#39;, re.DOTALL)
newlineRegex.search(&amp;#39;Serve the public trust.\nProtect the innocent.\nUphold the law.&amp;#39;).group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Serve the public trust.\nProtect the innocent.\nUphold the law.&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;æ¯å°æä¸ååå¤§å°å¯«&lt;/h4&gt;
&lt;p&gt;ære.Iç¶ä½ç¬¬2åå¼æ¸å³å¥re.compile&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;robocop = re.compile(r&amp;#39;robocop&amp;#39;, re.I)
robocop.search(&amp;#39;Robocop is part man, part machine, all cop.&amp;#39;).group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Robocop&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;robocop.search(&amp;#39;ROBOCOP protects the innocent.&amp;#39;).group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;ROBOCOP&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;robocop.search(&amp;#39;Al, why does your programming book talk about robocop so much?&amp;#39;).group()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;robocop&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sub&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ä½¿ç¨sub()æ¹æ³åä»£å­ä¸²&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;namesRegex = re.compile(r&amp;#39;Agent \w+&amp;#39;)
namesRegex.sub(&amp;#39;CENSORED&amp;#39;, &amp;#39;Agent Alice gave the secret documents to Agent Bob.&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;CENSORED gave the secret documents to CENSORED.&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;æ­£è¦è¡¨éå¼ä¸­ä½¿ç¨æ³¨é&lt;/h3&gt;
&lt;p&gt;ä¸+æ³¨é:è¤éçæ­£è¦è¡¨éå¼æéå¸¸é£ä»¥é±è® phoneRegex = re.compile(râ((\d{3}|\(\))?(\s|-|\.)?\d{3}(\s|-|\.)\d{4}&lt;/p&gt;
&lt;p&gt;(\s&lt;em&gt;(ext|x|ext.)\s&lt;/em&gt;\d{2,5})?)â)&lt;/p&gt;
&lt;p&gt;å¢å æ³¨é:ä½¿ç¨re.VERBOSEç¶ä½ç¬¬2åå¼æ¸å³å¥re.compileä¸­&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;phoneRegex = re.compile(r&amp;#39;&amp;#39;&amp;#39;(
    (\d{3}|\(\d{3}\))?              # area code
    (\s|-|\.)?                      # separator
    \d{3}                           # first 3 digits
    (\s|-|\.)                      # separator
    \d{4}                           # last 4 digits
    (\s*(ext|x|ext.)\s*\d{2,5})?  # extension
     )&amp;#39;&amp;#39;&amp;#39;, re.VERBOSE)
     &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;-re.ignorecase-re.dotall-and-re.verbose&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;çµåä½¿ç¨ re.IGNORECASE, re.DOTALL, and re.VERBOSE&lt;/h3&gt;
&lt;p&gt;æ³è¦ä½¿ç¨re.VERBOSEå¢å æ³¨é,éå¸æç¨re.IGNORECASEå¿½ç¥å¤§å°å¯«,ä½æ¯re.compileåªæ¥åä¸åå¼ç¶ä½ç¬¬äºåå¼æ¸&lt;/p&gt;
&lt;p&gt;æ³è§£æ±ºå¯ä½¿ç¨(|)ære.IGNORECASE, re.DOTALL, and re.VERBOSEçµåèµ·ä¾&lt;/p&gt;
&lt;p&gt;ex:æ©è¦ä¸ååå¤§å°å¯«,ä¸æ¯å°å°æ¾æåå«æè¡ç¬¦è,ä¸å¢å æ³¨é,å¯ä»¥éæ¨£å¯«:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;
someRegexValue = re.compile(&amp;#39;foo&amp;#39;, re.IGNORECASE | re.DOTALL | re.VERBOSE)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>/r/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/r/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On this page, you&#39;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file and adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$$...$$&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$\gamma_{n} = \frac{ 
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T 
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$$\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2$$&lt;/code&gt; renders as &lt;span  class=&#34;math&#34;&gt;\(\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2\)&lt;/span&gt; .&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\&lt;/code&gt; math linebreak:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[f(k;p_0^*) = \begin{cases} p_0^* &amp; \text{if }k=1, \\
1-p_0^* &amp; \text {if }k=0.\end{cases}\]&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```mermaid
graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```mermaid
gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;

&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Represent your data in tables:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;asides&#34;&gt;Asides&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for asides, also referred to as &lt;em&gt;notices&lt;/em&gt; or &lt;em&gt;hints&lt;/em&gt;. By prefixing a paragraph with &lt;code&gt;A&amp;gt;&lt;/code&gt;, it will render as an aside. You can enable this feature by adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter, or alternatively using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts&#34;&gt;&lt;em&gt;Alert&lt;/em&gt; shortcode&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;A&amp;gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;aside&gt;
&lt;p&gt;A Markdown aside is useful for displaying notices, hints, or definitions to your readers.&lt;/p&gt;
&lt;/aside&gt;

&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it ð&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On this page, you&#39;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file and adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$$...$$&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$\gamma_{n} = \frac{ 
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T 
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$$\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2$$&lt;/code&gt; renders as &lt;span  class=&#34;math&#34;&gt;\(\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2\)&lt;/span&gt; .&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\&lt;/code&gt; math linebreak:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[f(k;p_0^*) = \begin{cases} p_0^* &amp; \text{if }k=1, \\
1-p_0^* &amp; \text {if }k=0.\end{cases}\]&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```mermaid
graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```mermaid
gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;

&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Represent your data in tables:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;asides&#34;&gt;Asides&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for asides, also referred to as &lt;em&gt;notices&lt;/em&gt; or &lt;em&gt;hints&lt;/em&gt;. By prefixing a paragraph with &lt;code&gt;A&amp;gt;&lt;/code&gt;, it will render as an aside. You can enable this feature by adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter, or alternatively using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts&#34;&gt;&lt;em&gt;Alert&lt;/em&gt; shortcode&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;A&amp;gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;renders as&lt;/p&gt;

&lt;aside&gt;
&lt;p&gt;A Markdown aside is useful for displaying notices, hints, or definitions to your readers.&lt;/p&gt;
&lt;/aside&gt;

&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it ð&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>An example preprint / working paper</title>
      <link>/publication/preprint/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>/r/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/r/jupyter/</guid>
      <description>

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./academic_0_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-python-and-jupyter&#34;&gt;Install Python and Jupyter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and Jupyter notebook.&lt;/p&gt;

&lt;p&gt;Otherwise, for advanced users, install Jupyter notebook with &lt;code&gt;pip3 install jupyter&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-blog-post-as-usual-https-sourcethemes-com-academic-docs-managing-content-create-a-blog-post&#34;&gt;Create a new blog post &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-blog-post&#34; target=&#34;_blank&#34;&gt;as usual&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY_WEBSITE_FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;my-post&lt;/code&gt; with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;
hugo new  --kind post post/my-post
cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;/content/post/my-post/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;

&lt;p&gt;Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (&lt;em&gt;New &amp;gt; Python Notebook&lt;/em&gt;) or upload a notebook.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=.

# Copy the contents of Untitled.md and append it to index.md:
cat Untitled.md | tee -a index.md

# Remove the temporary file:
rm Untitled.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;

&lt;p&gt;Open &lt;code&gt;index.md&lt;/code&gt; in your text editor and edit the title etc. in the &lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34;&gt;front matter&lt;/a&gt; according to your preference.&lt;/p&gt;

&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;

&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/post/jupyter/</guid>
      <description>

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./academic_0_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-python-and-jupyter&#34;&gt;Install Python and Jupyter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and Jupyter notebook.&lt;/p&gt;

&lt;p&gt;Otherwise, for advanced users, install Jupyter notebook with &lt;code&gt;pip3 install jupyter&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-blog-post-as-usual-https-sourcethemes-com-academic-docs-managing-content-create-a-blog-post&#34;&gt;Create a new blog post &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-blog-post&#34; target=&#34;_blank&#34;&gt;as usual&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY_WEBSITE_FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;my-post&lt;/code&gt; with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;
hugo new  --kind post post/my-post
cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;/content/post/my-post/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;

&lt;p&gt;Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (&lt;em&gt;New &amp;gt; Python Notebook&lt;/em&gt;) or upload a notebook.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=.

# Copy the contents of Untitled.md and append it to index.md:
cat Untitled.md | tee -a index.md

# Remove the temporary file:
rm Untitled.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;

&lt;p&gt;Open &lt;code&gt;index.md&lt;/code&gt; in your text editor and edit the title etc. in the &lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34;&gt;front matter&lt;/a&gt; according to your preference.&lt;/p&gt;

&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;

&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/slides/example/</guid>
      <description>

&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;

&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code block:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;

&lt;p&gt;Block math:&lt;/p&gt;

&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;

&lt;p&gt;Make content appear incrementally&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
   One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   Three
&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;


&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;


&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;

&lt;p&gt;Customize the slide style and background&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>list</title>
      <link>/python/list/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/python/list/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;b = [[1,2],[9,4,5]]
c = b[0][1]
d=b[1][0]
e=len(b)
f= len(b[1])
print(&amp;quot;c=&amp;quot;,c)
print(&amp;quot;d=&amp;quot;,d)
print(&amp;quot;e=&amp;quot;,e)
print(&amp;quot;f=&amp;quot;,f)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;c= 2
d= 9
e= 2
f= 3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a =[1,2,3,4,5]
a[1:-1]=a
a[1:-1]=[]
print(a)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[1, 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a=[1,2]
b = a
b=b+[3]
a

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[1, 2]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a=[1,2]
b = a
b+=[3]
a
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import copy
a = [1, 2, 3, 4, [&#39;a&#39;, &#39;b&#39;]] #åå§å¯¹è±¡
 
b = a                       #èµå¼ï¼ä¼ å¯¹è±¡çå¼ç¨
c = copy.copy(a)            #å¯¹è±¡æ·è´ï¼æµæ·è´
d = copy.deepcopy(a)        #å¯¹è±¡æ·è´ï¼æ·±æ·è´
 
a.append(5)                 #ä¿®æ¹å¯¹è±¡a
a[4].append(&#39;c&#39;)            #ä¿®æ¹å¯¹è±¡aä¸­ç[&#39;a&#39;, &#39;b&#39;]æ°ç»å¯¹è±¡
 
print( &#39;a = &#39;, a )
print( &#39;b = &#39;, b )
print( &#39;c = &#39;, c )
print( &#39;d = &#39;, d )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;a =  [1, 2, 3, 4, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], 5]
b =  [1, 2, 3, 4, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], 5]
c =  [1, 2, 3, 4, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]]
d =  [1, 2, 3, 4, [&#39;a&#39;, &#39;b&#39;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;### list comprehension
# ä¸è¬å¯«æ³

arr1 = []

for i in range(10):
    arr1.append(i)

print(arr1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# in-place construction
arr1 = [i for i in range(10)]

print(arr1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# in-place construction
arr1 = [i for i in range(10)]

# you can use if to filter the elements
arr2 = [x for x in arr1 if x % 2 == 0]

# you can use as many conditions as you want!
arr3 = [x for x in arr1 if x &amp;gt;= 3 and x % 2]

# use nested for loops to make everyone dizzy XD
arr4 = [(x, y) for x in range(3) for y in range(4)]

print(arr1)
print(arr2)
print(arr3)
print(arr4)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[0, 2, 4, 6, 8]
[3, 5, 7, 9]
[(0, 0), (0, 1), (0, 2), (0, 3), (1, 0), (1, 1), (1, 2), (1, 3), (2, 0), (2, 1), (2, 2), (2, 3)]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[x for x in range(4)]
[t*t for t in [1,2,3]]
[[x,x*x] for x in range(3)]
[x for x in range(10) if x not in [3,4,5]]
[[x,x*x] for x in range(4) if x//3]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[[3, 9]]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
###############################



a=[3,4]
b=[a]*2
a[1]=8
b
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[[3, 8], [3, 8]]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a=[3,4]
b=a[:]*2
a[1]=8
b
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[3, 4, 3, 4]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#for è¿´åèä¸²å
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;b =[[1],[8,2],[4,3,3]]
for i in range(len(b)):
    for j in range(len(b[i])):
        print(b[i][j],end=&amp;quot; &amp;quot;)
    print()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1 
8 2 
4 3 3 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#åä¸
b =[[1],[8,2],[4,3,3]]
for p in b:
    for x in p:
        print(x,end=&amp;quot; &amp;quot;)
    print()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1 
8 2 
4 3 3 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#åä¸
for p in [[1],[8,2],[4,3,3]]:
    for x in p:
        print(x,end=&amp;quot; &amp;quot;)
    print()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1 
8 2 
4 3 3 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#for è¿´åæ´æ¹ ä¸²ååç´ 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a =[1,8,3]
for i in range(len(a)):
    a[i]+=10
print(a)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[11, 18, 13]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a =[1,8,3]
for x in a:
    x+=10
print(a)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[1, 8, 3]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;b=[[1],[5,8],[3,4]]
for i in range(len(b)):
    for j in range(len(b[i])):
        b[i][j]+=10
print(b)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[[11], [15, 18], [13, 14]]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;b=[[1],[5,8],[3,4]]
for p in b:
    for i in range(len(p)):
        p[i]+=10
print(b)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[[11], [15, 18], [13, 14]]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#æèª¤
b=[[1],[5,8],[3,4]]
for p in b:
    for x in p:
        x +=10
print(b)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[[1], [5, 8], [3, 4]]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#å­ä¸²åè§£æå­åä¸²å
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(&amp;quot;abc&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(&amp;quot;123&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;n=423
a=[int(x) for x in list(str(n))]
a&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#ä½¿ç¨indexååºä¸æ¨
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dirs=[&amp;quot;west&amp;quot;,&amp;quot;north&amp;quot;,&amp;quot;west&amp;quot;,&amp;quot;south&amp;quot;]
dirs.index(&amp;quot;west&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for d in dirs:
    print(d,dirs.index(d),sep=&amp;quot;:&amp;quot;,end=&amp;quot; &amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;west:0 north:1 west:0 south:3 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;####tuple##
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;(one,two,three)=(1,2,3)
three
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[one,two,three]=[1,2,3]
three
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a=(4,5,6)
(four,five,six) = a
six
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;6
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;###å°æ¬èçç¥

one ,two =1,2
two
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;2
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from random import*
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;nums = [uniform(-1,1) for i in range(4)]
for x in nums : print(x)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0.4867200676882866
0.6229973999177287
-0.5681957844554919
0.39087687240861757
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;nums = [uniform(-1,1) for i in range(4)]
print(nums)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[-0.5903251082623902, 0.3351431014940154, -0.5958451499766018, 0.568850457028085]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;## 10 äººæ²éª°å­&#39;

import random

foo = [random.randint(1,6) for i in range(10)]
print(foo)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[6, 1, 6, 3, 1, 3, 4, 5, 5, 1]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 10åèç¢¼é¨æåçµ¦4åäºº,æ¯äºº2ç
balls=list(range(1,11))

#æäºé åº

random.shuffle(balls)
print(balls)
#åçµ¦4äºº,ç¾äºº2ç
pno,m=4,2

for i in range(pno):
    print(i+1,end=&amp;quot;: &amp;quot;)
    for x in balls[i*m:i*m+m]:
        print(x,end=&amp;quot; &amp;quot;)
    print()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[4, 7, 9, 8, 2, 3, 5, 10, 1, 6]
1: 4 7 
2: 9 8 
3: 2 3 
4: 5 10 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#ä¸äººåæ²åæ¬¡è²å­

dices = &amp;quot;çé¦¬çèé¾é³³&amp;quot;

#3äººä»»æææ²4æ¬¡

pno , m = 3 ,4

for p in range(pno):
    print(p+1,end=&amp;quot;: &amp;quot;)
    
    for k in range(m):
        print(random.choice(dices),end=&amp;quot; &amp;quot;)
    print()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1: é¦¬ é¦¬ ç é¦¬ 
2: ç é³³ é¦¬ ç 
3: é³³ ç ç é¦¬ 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import random 

while True :

	# ææ¢ç·æ¸é
	n = int( input(&amp;quot;&amp;gt; &amp;quot;) )

	# m æé·ç´ç·é«
	# w ç´æ¢åå¯¬ 
	m , w = 9 , 3

	# ä½¿ç¨äºæ¸è¨­å®åç´æ¢ç·é·
	vals = [ random.randint(1,m) for i in range(1,n+1) ]

	# ç«ç´æ¢ç·
	for s in range(m,0,-1) :
		
		for val in vals :

			if s &amp;gt; val :
				print( &amp;quot; &amp;quot;*w , end=&amp;quot; &amp;quot; )
			elif s == val :
				print( &amp;quot;\\&amp;quot; + str(val) + &amp;quot;/&amp;quot; , end=&amp;quot; &amp;quot; )
			else :
				print( &amp;quot; | &amp;quot; , end=&amp;quot; &amp;quot; )

		print() 

	# ç«åºé¨ç­è
	print( &amp;quot;=&amp;quot;*( (w+1)*n - 1) )

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; 10
\9/                                     
 |          \8/                         
 |           |                  \7/     
 |           |          \6/ \6/  |      
 |           |  \5/      |   |   |      
 |           |   |       |   |   |      
 |           |   |       |   |   |  \3/ 
 |  \2/      |   |  \2/  |   |   |   |  
 |   |  \1/  |   |   |   |   |   |   |  
=======================================
&amp;gt; -1










&amp;gt; 10
                            \9/         
                             |          
                    \7/      |  \7/     
        \6/          |       |   |      
    \5/  |           |       |   |      
     |   |      \4/  |       |   |      
     |   |       |   |  \3/  |   |  \3/ 
\2/  |   |  \2/  |   |   |   |   |   |  
 |   |   |   |   |   |   |   |   |   |  
=======================================
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;1+1

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from random import *

n , total = 5 , 50000

counts = [ 0 for x in range(n+1) ]

for k in range(total) :

    # èµ·å§è½ä¸çä½ç½®
    ball_pos = 2*randint(1,n) - 1

    # ç¬¬ä¸å±¤éå­
    move = 2*randint(0,1) - 1
    ball_pos += move 

    # ç¬¬äºå°ç¬¬äºå±¤éå­
    for i in range(2) :
        
        move = 2*randint(0,1) - 1
        ball_pos += move 

        # ç¢°å°å©å´ï¼æåé¢é
        if ball_pos &amp;lt; 0 or ball_pos &amp;gt; 2*n : break 

        move = 2*randint(0,1) - 1
        ball_pos += move 

    # çæ¸çµ±è¨
    if ball_pos &amp;lt; 0 : 
        counts[0] += 1
    elif ball_pos &amp;gt; 2*n :
        counts[-1] += 1
    else :
        counts[ball_pos//2] += 1

# åå°
for no in counts :
    s = int(160*no/total+0.5)
    print(str(s)+&amp;quot;/160&amp;quot;,end=&amp;quot; &amp;quot;)

print()        

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;24/160 25/160 31/160 31/160 25/160 24/160 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>/project/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/project/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Academic: the website builder for Hugo</title>
      <link>/r/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/r/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em&gt;widgets&lt;/em&gt;, &lt;em&gt;themes&lt;/em&gt;, and &lt;em&gt;language packs&lt;/em&gt; included!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://sourcethemes.com/academic/#expo&#34; target=&#34;_blank&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;&lt;strong&gt;Setup Academic&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Ask a question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;Request a feature or report a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updating? View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support development of Academic:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34;&gt;Donate a coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patreon.com/cushen&#34; target=&#34;_blank&#34;&gt;Become a backer on Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34;&gt;Decorate your laptop or journal with an Academic sticker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34;&gt;Wear the T-shirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; &gt;

&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://sourcethemes.com/academic/docs/jupyter/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 15+ language packs including English, ä¸­æ, and PortuguÃªs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic comes with &lt;strong&gt;day (light) and night (dark) mode&lt;/strong&gt; built-in. Click the sun/moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt; to see it in action!&lt;/p&gt;

&lt;p&gt;Choose a stunning color and font theme for your site. Themes are fully customizable and include:&lt;/p&gt;









  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-1950s.png&#34; data-caption=&#34;1950s&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-1950s_huaf5482f8cea0c5a703a328640e3b7509_21614_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-apogee.png&#34; data-caption=&#34;Apogee&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-apogee_hu4b45d99db97150df01464c393bfd17d4_24119_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-coffee-playfair.png&#34; data-caption=&#34;Coffee theme with Playfair font&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-coffee-playfair_hu446a8f670cc5622adcc77b97ba95f6c5_22462_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-dark.png&#34; data-caption=&#34;Dark&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-dark_hu1e8601ecc47f58eada7743fdcd709d3d_21456_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-default.png&#34; data-caption=&#34;Default&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-default_huba6228b7bdf30e2f03f12ea91b2cba0d_21751_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-forest.png&#34; data-caption=&#34;Forest&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-forest_hu4f093a1c683134431456584193ea41ee_21797_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-ocean.png&#34; data-caption=&#34;Ocean&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-ocean_hu14831ccafc2219f30a7a096fa7617e01_21760_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/r/getting-started/gallery/theme-strawberry.png&#34; data-caption=&#34;Strawberry&#34;&gt;
  &lt;img src=&#34;/r/getting-started/gallery/theme-strawberry_hu36b0b347fcca08bd39e2df22dcedbdfb_39532_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;

&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34; target=&#34;_blank&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-scripts&#34; target=&#34;_blank&#34;&gt;Academic Scripts&lt;/a&gt;:&lt;/strong&gt; Scripts to help migrate content to new versions of Academic&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-web-browser&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;one-click install using your web browser (recommended)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-git&#34; target=&#34;_blank&#34;&gt;install on your computer using &lt;strong&gt;Git&lt;/strong&gt; with the Command Prompt/Terminal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-zip&#34; target=&#34;_blank&#34;&gt;install on your computer by downloading the &lt;strong&gt;ZIP files&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;install on your computer with &lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then &lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;personalize and deploy your new site&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;View the Update Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;updates&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Academic: the website builder for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em&gt;widgets&lt;/em&gt;, &lt;em&gt;themes&lt;/em&gt;, and &lt;em&gt;language packs&lt;/em&gt; included!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://sourcethemes.com/academic/#expo&#34; target=&#34;_blank&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;&lt;strong&gt;Setup Academic&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Ask a question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;Request a feature or report a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updating? View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support development of Academic:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34;&gt;Donate a coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patreon.com/cushen&#34; target=&#34;_blank&#34;&gt;Become a backer on Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34;&gt;Decorate your laptop or journal with an Academic sticker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34;&gt;Wear the T-shirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; &gt;

&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://sourcethemes.com/academic/docs/jupyter/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 15+ language packs including English, ä¸­æ, and PortuguÃªs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic comes with &lt;strong&gt;day (light) and night (dark) mode&lt;/strong&gt; built-in. Click the sun/moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt; to see it in action!&lt;/p&gt;

&lt;p&gt;Choose a stunning color and font theme for your site. Themes are fully customizable and include:&lt;/p&gt;









  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-1950s.png&#34; data-caption=&#34;1950s&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-1950s_huaf5482f8cea0c5a703a328640e3b7509_21614_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-apogee.png&#34; data-caption=&#34;Apogee&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-apogee_hu4b45d99db97150df01464c393bfd17d4_24119_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-coffee-playfair.png&#34; data-caption=&#34;Coffee theme with Playfair font&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-coffee-playfair_hu446a8f670cc5622adcc77b97ba95f6c5_22462_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-dark.png&#34; data-caption=&#34;Dark&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-dark_hu1e8601ecc47f58eada7743fdcd709d3d_21456_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-default.png&#34; data-caption=&#34;Default&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-default_huba6228b7bdf30e2f03f12ea91b2cba0d_21751_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-forest.png&#34; data-caption=&#34;Forest&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-forest_hu4f093a1c683134431456584193ea41ee_21797_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-ocean.png&#34; data-caption=&#34;Ocean&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-ocean_hu14831ccafc2219f30a7a096fa7617e01_21760_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
      
        
      
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-strawberry.png&#34; data-caption=&#34;Strawberry&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-strawberry_hu36b0b347fcca08bd39e2df22dcedbdfb_39532_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;

&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34; target=&#34;_blank&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-scripts&#34; target=&#34;_blank&#34;&gt;Academic Scripts&lt;/a&gt;:&lt;/strong&gt; Scripts to help migrate content to new versions of Academic&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-web-browser&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;one-click install using your web browser (recommended)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-git&#34; target=&#34;_blank&#34;&gt;install on your computer using &lt;strong&gt;Git&lt;/strong&gt; with the Command Prompt/Terminal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-zip&#34; target=&#34;_blank&#34;&gt;install on your computer by downloading the &lt;strong&gt;ZIP files&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;install on your computer with &lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then &lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;personalize and deploy your new site&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;View the Update Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;updates&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>/publication/conference-paper/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>/publication/conference-paper/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

[{"authors":["admin"],"categories":null,"content":"We are interesting in math and programing !\n","date":1564963200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1564963200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"We are interesting in math and programing !","tags":null,"title":"Hans","type":"authors"},{"authors":null,"categories":null,"content":" Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":" Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["Hans"],"categories":[],"content":"\rContent comes from https://adv-r.hadley.nz/\nIntroduction\rA functional is a function that takes a function as an input and returns a vector as output. Here’s a simple functional: it calls the function provided as input with 1000 random uniform numbers.\nrandomise \u0026lt;- function(f) f(runif(1e3))\rrandomise(mean)\r## [1] 0.5180728\rrandomise(mean)\r## [1] 0.4970412\rrandomise(sum)\r## [1] 494.5314\rThis chapter will focus on functionals provided by the purrr package\nlibrary(purrr)\rtriple \u0026lt;- function(x) x * 3\rmap(1:3, triple)\r## [[1]]\r## [1] 3\r## ## [[2]]\r## [1] 6\r## ## [[3]]\r## [1] 9\r如下圖: map function 回傳 list\n下面map__*則回傳特定的atomic vector\nThese examples rely on two facts: mtcars is a data frame, and data frames are lists containing vectors of the same length. This is more obvious if we draw a data frame with the same orientation as vector: # map_chr() always returns a character vector\rmap_chr(mtcars, typeof)\r## mpg cyl disp hp drat wt qsec vs ## \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; ## am gear carb ## \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot;\r# map_lgl() always returns a logical vector\rmap_lgl(mtcars, is.double)\r## mpg cyl disp hp drat wt qsec vs am gear carb ## TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\r# map_int() always returns a integer vector\rn_unique \u0026lt;- function(x) length(unique(x))\rmap_int(mtcars, n_unique)\r## mpg cyl disp hp drat wt qsec vs am gear carb ## 25 3 27 22 22 29 30 2 2 3 6\r# map_dbl() always returns a double vector\rmap_dbl(mtcars, mean)\r## mpg cyl disp hp drat wt ## 20.090625 6.187500 230.721875 146.687500 3.596563 3.217250 ## qsec vs am gear carb ## 17.848750 0.437500 0.406250 3.687500 2.812500\r\rAnonymous functions and shortcuts\rmap_dbl(mtcars, function(x) length(unique(x)))\r## mpg cyl disp hp drat wt qsec vs am gear carb ## 25 3 27 22 22 29 30 2 2 3 6\r簡化寫法:\nmap_dbl(mtcars, ~ length(unique(.x)))\r## mpg cyl disp hp drat wt qsec vs am gear carb ## 25 3 27 22 22 29 30 2 2 3 6\r以下寫法通常用來產生data:\nx \u0026lt;- map(1:3, ~runif(2))\rstr(x)\r## List of 3\r## $ : num [1:2] 0.165 0.808\r## $ : num [1:2] 0.179 0.884\r## $ : num [1:2] 0.6862 0.0704\rThe map functions for extracting elements from a vector , You can use a character vector to select elements by name, an integer vector to select by position, or a list to select by both name and position.These are very useful for working with deeply nested lists, which often arise when working with JSON.\nx \u0026lt;- list(\rlist(-1, x = 1, y = c(2), z = \u0026quot;a\u0026quot;),\rlist(-2, x = 4, y = c(5, 6), z = \u0026quot;b\u0026quot;),\rlist(-3, x = 8, y = c(9, 10, 11))\r)\r# Select by name\rmap_dbl(x, \u0026quot;x\u0026quot;)\r## [1] 1 4 8\r#\u0026gt; [1] 1 4 8\r# Or by position\rmap_dbl(x, 1)\r## [1] -1 -2 -3\r#\u0026gt; [1] -1 -2 -3\r# Or by both\rmap_dbl(x, list(\u0026quot;y\u0026quot;, 1))\r## [1] 2 5 9\r#\u0026gt; [1] 2 5 9\r# You\u0026#39;ll get an error if a component doesn\u0026#39;t exist:\r#map_chr(x, \u0026quot;z\u0026quot;)\r#\u0026gt; Error: Result 3 must be a single string, not NULL of length 0\r# Unless you supply a .default value\rmap_chr(x, \u0026quot;z\u0026quot;, .default = NA)\r## [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; NA\r\rPassing arguments with ...\rIt’s often convenient to pass along additional arguments to the function that you’re calling. For example, you might want to pass na.rm = TRUE along to mean(). One way to do that is with an anonymous function:\nY \u0026lt;- list(1:5, c(1:10, NA))\rmap_dbl(Y, ~ mean(.x, na.rm = TRUE))\r## [1] 3.0 5.5\rBut because the map functions pass ... along, there’s a simpler form available:\nmap_dbl(x, mean, na.rm = TRUE)\r## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:\r## returning NA\r## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:\r## returning NA\r## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:\r## returning NA\r## [1] NA NA NA\rmap(直觀圖:\nNote there’s a subtle difference between placing extra arguments inside an anonymous function compared with passing them to map(). Putting them in an anonymous function means that they will be evaluated every time f() is executed, not just once when you call map(). This is easiest to see if we make the additional argument random:\nplus \u0026lt;- function(x, y) x + y\rx \u0026lt;- c(1, 2, 3, 4)\rmap_dbl(x, plus, runif(1))# runif(1) 只使用一次的結果\r## [1] 1.051538 2.051538 3.051538 4.051538\rmap_dbl(x, ~ plus(.x, runif(1))) #x長度4,所以使用4次runif(1)\r## [1] 1.079182 2.451325 3.165983 4.944328\r\rVarying another argument\rHow do you get the result in this picture?\nIt turns out that there’s no way to do it directly, but there are two tricks you can use instead. To illustrate them, imagine I have a vector that contains a few unusual values, and I want to explore the effect of different amounts of trimming when computing the mean. In this case, the first argument to mean() will be constant, and I want to vary the second argument, trim.\ntrims \u0026lt;- c(0, 0.1, 0.2, 0.5)\rx \u0026lt;- rcauchy(1000)\r\rThe simplest technique is to use an anonymous function to rearrange the argument order:\r\rmap_dbl(trims, ~ mean(x, trim = .x))\r## [1] -0.98554957 -0.06582493 -0.04275515 -0.03877875\r#or\rmap_dbl(trims, function(trim) mean(x, trim = trim))\r## [1] -0.98554957 -0.06582493 -0.04275515 -0.03877875\r\rPurrr style\rBefore we go on to explore more map variants, let’s take a quick look at how you tend to use multiple purrr functions to solve a moderately realistic problem: fitting a model to each subgroup and extracting a coefficient of the model. For this toy example, I’m going to break the mtcars data set down into groups defined by the number of cylinders, using the base split function:\nby_cyl \u0026lt;- split(mtcars, mtcars$cyl)\rThis creates a list of three data frames: the cars with 4, 6, and 8 cylinders respectively.\nNow imagine we want to fit a linear model, then extract the second coefficient (i.e. the slope). The following code shows how you might do that with purrr:\nby_cyl %\u0026gt;% map(function(x) lm(mpg ~ wt, data = x)) %\u0026gt;% #(or map(~ lm(mpg ~ wt, data = .x)))\rmap(coef) %\u0026gt;% map_dbl(2)\r## 4 6 8 ## -5.647025 -2.780106 -2.192438\r同以下寫法:\nby_cyl %\u0026gt;% lapply(function(data) lm(mpg ~ wt, data = data)) %\u0026gt;% lapply(coef) %\u0026gt;% vapply(function(x) x[[2]], double(1))\r## 4 6 8 ## -5.647025 -2.780106 -2.192438\rmodels \u0026lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))\rvapply(models, function(x) coef(x)[[2]], double(1))\r## 4 6 8 ## -5.647025 -2.780106 -2.192438\rintercepts \u0026lt;- double(length(by_cyl))\rfor (i in seq_along(by_cyl)) {\rmodel \u0026lt;- lm(mpg ~ wt, data = by_cyl[[i]])\rintercepts[[i]] \u0026lt;- coef(model)[[2]]\r}\rintercepts\r## [1] -5.647025 -2.780106 -2.192438\r\rMap variants\rfive new ideas:\nOutput same type as input with modify()\n\rIterate over two inputs with map2().\n\rIterate with an index using imap()\n\rReturn nothing with walk().\n\rIterate over any number of inputs with pmap().\n\r\rThe map family of functions has orthogonal input and outputs, meaning that we can organise all the family into a matrix, with inputs in the rows and outputs in the columns. Once you’ve mastered the idea in a row, you can combine it with any column; once you’ve mastered the idea in a column, you can combine it with any row. That relationship is summarised in the following table:\n\r\r\r\r\rList\r\r\rAtomic\r\r\rSame type\r\r\rNothing\r\r\r\r\r\rOne argument\r\r\rmap()\r\r\rmap_lgl(), …\r\r\rmodify()\r\r\rwalk()\r\r\r\rTwo arguments\r\r\rmap2()\r\r\rmap2_lgl(), …\r\r\rmodify2()\r\r\rwalk2()\r\r\r\rOne argument + index\r\r\rimap()\r\r\rimap_lgl(), …\r\r\rimodify()\r\r\riwalk()\r\r\r\rN arguments\r\r\rpmap()\r\r\rpmap_lgl(), …\r\r\r—\r\r\rpwalk()\r\r\r\r\r1. modify()\rImagine you wanted to double every column in a data frame. You might first try using map(), but map() always returns a list:\ndf \u0026lt;- data.frame(\rx = 1:3,\ry = 6:4\r)\rmap(df, function(x) x * 2)\r## $x\r## [1] 2 4 6\r## ## $y\r## [1] 12 10 8\rIf you want to keep the output as a data frame, you can use modify(), which always returns the same type of output as the input:\nmodify(df, function(x) x * 2)\r## x y\r## 1 2 12\r## 2 4 10\r## 3 6 8\rmodify() doesn’t modify in place, it returns a modified copy, so if you wanted to permanently modify df, you’d need to assign it:\ndf \u0026lt;- modify(df, ~ .x * 2)\r\r2. Two inputs: map2() and friends\rmap() is vectorised over a single argument, .x. This means it only varies .x when calling .f, and all other arguments are passed along unchanged , thus making it poorly suited for some problems. For example, how would you find a weighted mean when you have a list of observations and a list of weights? Imagine we have the following data:\nxs \u0026lt;- map(1:8, ~ runif(10))\rxs[[1]][[1]] \u0026lt;- NA\rws \u0026lt;- map(1:8, ~ rpois(10, 5) + 1)\rYou can use map_dbl() to compute the unweighted means:\nmap_dbl(xs, mean)\r## [1] NA 0.5682778 0.6541659 0.4902992 0.4445505 0.5618488 0.4708310\r## [8] 0.2442385\rBut passing ws as an additional argument doesn’t work because arguments after .fare not transformed:\nmap_dbl(xs, weighted.mean, w = ws)\r## Error in weighted.mean.default(.x[[i]], ...): \u0026#39;x\u0026#39; and \u0026#39;w\u0026#39; must have the same length\rWe need a new tool: a map2(), which is vectorised over two arguments. This means both .x and .y are varied in each call to .f:\nmap2_dbl(xs, ws, weighted.mean)\r## [1] NA 0.5662181 0.6843998 0.4904382 0.4689844 0.5443301 0.4432096\r## [8] 0.2414307\rThe arguments to map2() are slightly different to the arguments to map() as two vectors come before the function, rather than one. Additional arguments still go afterwards:\nmap2_dbl(xs, ws, weighted.mean, na.rm = TRUE)\r## [1] 0.5435303 0.5662181 0.6843998 0.4904382 0.4689844 0.5443301 0.4432096\r## [8] 0.2414307\rOne of the big differences between map2() and the simple function above is that map2() recycles its inputs to make sure that they’re the same length:\n\r3. No outputs: walk() and friends\rMost functions are called for the value that they return, so it makes sense to capture and store the value with a map() function. But some functions are called primarily for their side-effects (e.g. cat(), write.csv(), or ggsave()) and it doesn’t make sense to capture their results. Take this simple example that displays a welcome message using cat(). cat() returns NULL, so while map() works (in the sense that it generates the desired welcomes), it also returns list(NULL, NULL).\nwelcome \u0026lt;- function(x) {\rcat(\u0026quot;Welcome \u0026quot;, x, \u0026quot;!\\n\u0026quot;, sep = \u0026quot;\u0026quot;)\r}\rnames \u0026lt;- c(\u0026quot;Hadley\u0026quot;, \u0026quot;Jenny\u0026quot;)\r# As well as generate the welcomes, it also shows # the return value of cat()\rmap(names, welcome)\r## Welcome Hadley!\r## Welcome Jenny!\r## [[1]]\r## NULL\r## ## [[2]]\r## NULL\rpurrr provides the walk family of functions that ignore the return values of the .f and instead return .x invisibly\nwalk(names, welcome)\r## Welcome Hadley!\r## Welcome Jenny!\rOne of the most useful walk() variants is walk2() because a very common side-effect is saving something to disk, and when saving something to disk you always have a pair of values: the object and the path that you want to save it to. \rFor example, imagine you have a list of data frames (which I’ve created here using split()), and you’d like to save each one to a separate CSV file. That’s easy with walk2():\rtemp \u0026lt;- tempfile()\rdir.create(temp)\rcyls \u0026lt;- split(mtcars, mtcars$cyl)\rpaths \u0026lt;- file.path(temp, paste0(\u0026quot;cyl-\u0026quot;, names(cyls), \u0026quot;.csv\u0026quot;))\rwalk2(cyls, paths, write.csv)\rdir(temp)\r## [1] \u0026quot;cyl-4.csv\u0026quot; \u0026quot;cyl-6.csv\u0026quot; \u0026quot;cyl-8.csv\u0026quot;\r\rHere the walk2() is equivalent to write.csv(cyls[[1]], paths[[1]]), write.csv(cyls[[2]], paths[[2]]), write.csv(cyls[[3]], paths[[3]]).\r\r4. Iterating over values and indices imap\r\rThere are three basic ways to loop over a vector with a for loop:\r\r\rLoop over the elements: for (x in xs)\r\r\rLoop over the numeric indices: for (i in seq_along(xs))\r\r\rLoop over the names: for (nm in names(xs))\r\r\r\rThe first form is analogous to the map() family. The second and third forms are equivalent to the imap() family which allows you to iterate over the values and the indices of a vector in parallel.\r\rimap() is like map2() in the sense that your .f gets called with two arguments, but here both are derived from the vector. imap(x, f) is equivalent to map2(x, names(x), f) if x has names, and map2(x, seq_along(x), f) if it does not.\r\rimap() is often useful for constructing labels:\rimap_chr(iris, ~ paste0(\u0026quot;The first value of \u0026quot;, .y, \u0026quot; is \u0026quot;, .x[[1]]))\r## Sepal.Length ## \u0026quot;The first value of Sepal.Length is 5.1\u0026quot; ## Sepal.Width ## \u0026quot;The first value of Sepal.Width is 3.5\u0026quot; ## Petal.Length ## \u0026quot;The first value of Petal.Length is 1.4\u0026quot; ## Petal.Width ## \u0026quot;The first value of Petal.Width is 0.2\u0026quot; ## Species ## \u0026quot;The first value of Species is setosa\u0026quot;\rIf the vector is unnamed, the second argument will be the index:\nx \u0026lt;- map(1:6, ~ sample(1000, 10))\rimap_chr(x, ~ paste0(\u0026quot;The highest value of \u0026quot;, .y, \u0026quot; is \u0026quot;, max(.x)))\r## [1] \u0026quot;The highest value of 1 is 994\u0026quot; \u0026quot;The highest value of 2 is 830\u0026quot;\r## [3] \u0026quot;The highest value of 3 is 982\u0026quot; \u0026quot;The highest value of 4 is 978\u0026quot;\r## [5] \u0026quot;The highest value of 5 is 987\u0026quot; \u0026quot;The highest value of 6 is 991\u0026quot;\r\rimap() is a useful helper if you want to work with the values in a vector along with their positions.\r\r5. Any number of inputs: pmap() and friends\r\rSince we have map() and map2(), you might expect map3(), map4(), map5(), … But where would you stop? Instead of generalising map2() to an arbitrary number of arguments, purrr takes a slightly different tack with pmap(): you supply it a single list, which contains any number of arguments. In most cases, that will be a list of equal-length vectors, i.e. something very similar to a data frame. In diagrams, I’ll emphasise that relationship by drawing the input similar to a data frame.\rAs before, the varying arguments come before .f (although now they must be wrapped in a list), and the constant arguments come afterwards.\npmap_dbl(list(xs, ws), weighted.mean, na.rm = TRUE)\r## [1] 0.5435303 0.5662181 0.6843998 0.4904382 0.4689844 0.5443301 0.4432096\r## [8] 0.2414307\rA big difference between pmap() and the other map functions is that pmap() gives you much finer control over argument matching because you can name the components of the list. Returning to our example from Section 9.2.5, where we wanted to vary the trim argument to x, we could instead use pmap():\ntrims \u0026lt;- c(0, 0.1, 0.2, 0.5)\rx \u0026lt;- rcauchy(1000)\rpmap_dbl(list(trim = trims), mean, x = x)\r## [1] 2.809533351 -0.004498009 0.016845353 0.035404020\rI think it’s good practice to name the components of the list to make it very clear how the function will be called.\nIt’s often convenient to call pmap() with a data frame. A handy way to create that data frame is with tibble::tribble(), which allows you to describe a data frame row-by-row\nparams \u0026lt;- tibble::tribble(\r~ n, ~ min, ~ max,\r1L, 0, 1,\r2L, 10, 100,\r3L, 100, 1000\r)\rpmap(params, runif)\r## [[1]]\r## [1] 0.3767931\r## ## [[2]]\r## [1] 35.25376 48.21015\r## ## [[3]]\r## [1] 353.9220 612.6494 846.7021\rHere, the column names are critical: I’ve carefully chosen to match them to the arguments to runif(), so the pmap(params, runif) is equivalent to runif(n = 1L, min = 0, max = 1), runif(n = 2, min = 10, max = 100), runif(n = 3L, min = 100, max = 1000). (If you have a data frame in hand, and the names don’t match, use dplyr::rename() or similar.)\n\r\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"0b19b5807cc0025c84ec321b7ec964aa","permalink":"/r/advanced_r/functional/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/r/advanced_r/functional/","section":"R","summary":"Content comes from https://adv-r.hadley.nz/\nIntroduction\rA functional is a function that takes a function as an input and returns a vector as output. Here’s a simple functional: it calls the function provided as input with 1000 random uniform numbers.\nrandomise \u0026lt;- function(f) f(runif(1e3))\rrandomise(mean)\r## [1] 0.5180728\rrandomise(mean)\r## [1] 0.4970412\rrandomise(sum)\r## [1] 494.5314\rThis chapter will focus on functionals provided by the purrr package\nlibrary(purrr)\rtriple \u0026lt;- function(x) x * 3\rmap(1:3, triple)\r## [[1]]\r## [1] 3\r## ## [[2]]\r## [1] 6\r## ## [[3]]\r## [1] 9\r如下圖: map function 回傳 list","tags":[],"title":"Note-functional","type":"R"},{"authors":["Hans"],"categories":[],"content":"\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"be11691f44eb253d0402e504d39196ca","permalink":"/post/advanced_r/vector/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/post/advanced_r/vector/","section":"post","summary":"\r","tags":[],"title":"R(1)- basic vector","type":"post"},{"authors":["Hans"],"categories":[],"content":"\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"de13ffc32224d63de89ef64ca9fdbdb6","permalink":"/python/advanced_r/vector/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/python/advanced_r/vector/","section":"Python","summary":"\r","tags":[],"title":"R(2353000000000)- basic vector","type":"Python"},{"authors":["Hans"],"categories":[],"content":"\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"547ad86e400bedd71e8f55669b691001","permalink":"/reinforcement_learning/advanced_r/vector/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/reinforcement_learning/advanced_r/vector/","section":"Reinforcement_learning","summary":"\r","tags":[],"title":"R(690000)- basic vector","type":"Reinforcement_learning"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file and adding markup: mmark to your page front matter.\nTo render inline or block math, wrap your LaTeX math with $$...$$.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n\\[\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}\\]\nExample inline math $$\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2$$ renders as \\(\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2\\) .\nExample multi-line math using the \\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n\\[f(k;p_0^*) = \\begin{cases} p_0^* \u0026 \\text{if }k=1, \\\\ 1-p_0^* \u0026 \\text {if }k=0.\\end{cases}\\]\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; ```  renders as\ngraph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D;  An example sequence diagram:\n```mermaid sequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d ```  renders as\ngantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a Markdown extension for asides, also referred to as notices or hints. By prefixing a paragraph with A\u0026gt;, it will render as an aside. You can enable this feature by adding markup: mmark to your page front matter, or alternatively using the Alert shortcode.\nA\u0026gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.\n Did you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"06391f81065c05b2848d8cd00330eba1","permalink":"/r/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/r/writing-technical-content/","section":"R","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.","tags":null,"title":"Writing technical content in Academic","type":"R"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file and adding markup: mmark to your page front matter.\nTo render inline or block math, wrap your LaTeX math with $$...$$.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n\\[\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}\\]\nExample inline math $$\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2$$ renders as \\(\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2\\) .\nExample multi-line math using the \\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n\\[f(k;p_0^*) = \\begin{cases} p_0^* \u0026 \\text{if }k=1, \\\\ 1-p_0^* \u0026 \\text {if }k=0.\\end{cases}\\]\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; ```  renders as\ngraph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D;  An example sequence diagram:\n```mermaid sequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d ```  renders as\ngantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a Markdown extension for asides, also referred to as notices or hints. By prefixing a paragraph with A\u0026gt;, it will render as an aside. You can enable this feature by adding markup: mmark to your page front matter, or alternatively using the Alert shortcode.\nA\u0026gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.\n Did you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Hans"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Hans"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"1ad6fcfe6e4ec774c818b0bf8e1e4623","permalink":"/r/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/r/jupyter/","section":"R","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"R"},{"authors":["Hans"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Hans"],"categories":[],"content":"a=[9,\u0026quot;中山\u0026quot;,\u0026quot;math\u0026quot;,2.5,[2,8]] a[-5] a[0]  9  b = [[1,2],[9,4,5]] c = b[0][1] d=b[1][0] e=len(b) f= len(b[1]) print(\u0026quot;c=\u0026quot;,c) print(\u0026quot;d=\u0026quot;,d) print(\u0026quot;e=\u0026quot;,e) print(\u0026quot;f=\u0026quot;,f)  c= 2 d= 9 e= 2 f= 3  a =[1,2,3,4,5] a[1:-1]=a a[1:-1]=[] print(a)  [1, 5]  a=[1,2] b = a b=b+[3] a  [1, 2]  a=[1,2] b = a b+=[3] a  [1, 2, 3]  import copy a = [1, 2, 3, 4, ['a', 'b']] #原始对象 b = a #赋值，传对象的引用 c = copy.copy(a) #对象拷贝，浅拷贝 d = copy.deepcopy(a) #对象拷贝，深拷贝 a.append(5) #修改对象a a[4].append('c') #修改对象a中的['a', 'b']数组对象 print( 'a = ', a ) print( 'b = ', b ) print( 'c = ', c ) print( 'd = ', d )  a = [1, 2, 3, 4, ['a', 'b', 'c'], 5] b = [1, 2, 3, 4, ['a', 'b', 'c'], 5] c = [1, 2, 3, 4, ['a', 'b', 'c']] d = [1, 2, 3, 4, ['a', 'b']]  ### list comprehension # 一般寫法 arr1 = [] for i in range(10): arr1.append(i) print(arr1)  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  # in-place construction arr1 = [i for i in range(10)] print(arr1)  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  # in-place construction arr1 = [i for i in range(10)] # you can use if to filter the elements arr2 = [x for x in arr1 if x % 2 == 0] # you can use as many conditions as you want! arr3 = [x for x in arr1 if x \u0026gt;= 3 and x % 2] # use nested for loops to make everyone dizzy XD arr4 = [(x, y) for x in range(3) for y in range(4)] print(arr1) print(arr2) print(arr3) print(arr4)  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] [0, 2, 4, 6, 8] [3, 5, 7, 9] [(0, 0), (0, 1), (0, 2), (0, 3), (1, 0), (1, 1), (1, 2), (1, 3), (2, 0), (2, 1), (2, 2), (2, 3)]  [x for x in range(4)] [t*t for t in [1,2,3]] [[x,x*x] for x in range(3)] [x for x in range(10) if x not in [3,4,5]] [[x,x*x] for x in range(4) if x//3]  [[3, 9]]  ############################### a=[3,4] b=[a]*2 a[1]=8 b  [[3, 8], [3, 8]]  a=[3,4] b=a[:]*2 a[1]=8 b  [3, 4, 3, 4]  #for 迴圈與串列  b =[[1],[8,2],[4,3,3]] for i in range(len(b)): for j in range(len(b[i])): print(b[i][j],end=\u0026quot; \u0026quot;) print()  1 8 2 4 3 3  #同上 b =[[1],[8,2],[4,3,3]] for p in b: for x in p: print(x,end=\u0026quot; \u0026quot;) print()  1 8 2 4 3 3  #同上 for p in [[1],[8,2],[4,3,3]]: for x in p: print(x,end=\u0026quot; \u0026quot;) print()  1 8 2 4 3 3  #for 迴圈更改 串列元素  a =[1,8,3] for i in range(len(a)): a[i]+=10 print(a)  [11, 18, 13]  a =[1,8,3] for x in a: x+=10 print(a)  [1, 8, 3]  b=[[1],[5,8],[3,4]] for i in range(len(b)): for j in range(len(b[i])): b[i][j]+=10 print(b)  [[11], [15, 18], [13, 14]]  b=[[1],[5,8],[3,4]] for p in b: for i in range(len(p)): p[i]+=10 print(b)  [[11], [15, 18], [13, 14]]  #有誤 b=[[1],[5,8],[3,4]] for p in b: for x in p: x +=10 print(b)  [[1], [5, 8], [3, 4]]  #字串分解成字元串列  list(\u0026quot;abc\u0026quot;)  ['a', 'b', 'c']  list(\u0026quot;123\u0026quot;)  ['1', '2', '3']  n=423 a=[int(x) for x in list(str(n))] a  [4, 2, 3]  #使用index取出下標  dirs=[\u0026quot;west\u0026quot;,\u0026quot;north\u0026quot;,\u0026quot;west\u0026quot;,\u0026quot;south\u0026quot;] dirs.index(\u0026quot;west\u0026quot;)  0  for d in dirs: print(d,dirs.index(d),sep=\u0026quot;:\u0026quot;,end=\u0026quot; \u0026quot;)  west:0 north:1 west:0 south:3  ####tuple##  (one,two,three)=(1,2,3) three  3  [one,two,three]=[1,2,3] three  3  a=(4,5,6) (four,five,six) = a six  6  ###小括號省略 one ,two =1,2 two  2  from random import*  nums = [uniform(-1,1) for i in range(4)] for x in nums : print(x)  0.4867200676882866 0.6229973999177287 -0.5681957844554919 0.39087687240861757  nums = [uniform(-1,1) for i in range(4)] print(nums)  [-0.5903251082623902, 0.3351431014940154, -0.5958451499766018, 0.568850457028085]  ## 10 人擲骰子' import random foo = [random.randint(1,6) for i in range(10)] print(foo)  [6, 1, 6, 3, 1, 3, 4, 5, 5, 1]  # 10個號碼隨意分給4個人,每人2球 balls=list(range(1,11)) #打亂順序 random.shuffle(balls) print(balls) #分給4人,美人2球 pno,m=4,2 for i in range(pno): print(i+1,end=\u0026quot;: \u0026quot;) for x in balls[i*m:i*m+m]: print(x,end=\u0026quot; \u0026quot;) print()  [4, 7, 9, 8, 2, 3, 5, 10, 1, 6] 1: 4 7 2: 9 8 3: 2 3 4: 5 10  #三人各擲四次色子 dices = \u0026quot;牛馬獅虎龍鳳\u0026quot; #3人任意投擲4次 pno , m = 3 ,4 for p in range(pno): print(p+1,end=\u0026quot;: \u0026quot;) for k in range(m): print(random.choice(dices),end=\u0026quot; \u0026quot;) print()  1: 馬 馬 獅 馬 2: 獅 鳳 馬 牛 3: 鳳 牛 牛 馬  import random while True : # 斜條線數量 n = int( input(\u0026quot;\u0026gt; \u0026quot;) ) # m 最長直線高 # w 直條圖寬 m , w = 9 , 3 # 使用亂數設定各直條線長 vals = [ random.randint(1,m) for i in range(1,n+1) ] # 畫直條線 for s in range(m,0,-1) : for val in vals : if s \u0026gt; val : print( \u0026quot; \u0026quot;*w , end=\u0026quot; \u0026quot; ) elif s == val : print( \u0026quot;\\\\\u0026quot; + str(val) + \u0026quot;/\u0026quot; , end=\u0026quot; \u0026quot; ) else : print( \u0026quot; | \u0026quot; , end=\u0026quot; \u0026quot; ) print() # 畫底部等號 print( \u0026quot;=\u0026quot;*( (w+1)*n - 1) )  \u0026gt; 10 \\9/ | \\8/ | | \\7/ | | \\6/ \\6/ | | | \\5/ | | | | | | | | | | | | | | | \\3/ | \\2/ | | \\2/ | | | | | | \\1/ | | | | | | | ======================================= \u0026gt; -1 \u0026gt; 10 \\9/ | \\7/ | \\7/ \\6/ | | | \\5/ | | | | | | \\4/ | | | | | | | \\3/ | | \\3/ \\2/ | | \\2/ | | | | | | | | | | | | | | | | =======================================  1+1  from random import * n , total = 5 , 50000 counts = [ 0 for x in range(n+1) ] for k in range(total) : # 起始落下的位置 ball_pos = 2*randint(1,n) - 1 # 第一層釘子 move = 2*randint(0,1) - 1 ball_pos += move # 第二到第五層釘子 for i in range(2) : move = 2*randint(0,1) - 1 ball_pos += move # 碰到兩側，提前離開 if ball_pos \u0026lt; 0 or ball_pos \u0026gt; 2*n : break move = 2*randint(0,1) - 1 ball_pos += move # 球數統計 if ball_pos \u0026lt; 0 : counts[0] += 1 elif ball_pos \u0026gt; 2*n : counts[-1] += 1 else : counts[ball_pos//2] += 1 # 列印 for no in counts : s = int(160*no/total+0.5) print(str(s)+\u0026quot;/160\u0026quot;,end=\u0026quot; \u0026quot;) print()  24/160 25/160 31/160 31/160 25/160 24/160  ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"5df9e3a88f897420ec75c5b15293e926","permalink":"/python/list/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/python/list/","section":"Python","summary":"a=[9,\u0026quot;中山\u0026quot;,\u0026quot;math\u0026quot;,2.5,[2,8]] a[-5] a[0]  9  b = [[1,2],[9,4,5]] c = b[0][1] d=b[1][0] e=len(b) f= len(b[1]) print(\u0026quot;c=\u0026quot;,c) print(\u0026quot;d=\u0026quot;,d) print(\u0026quot;e=\u0026quot;,e) print(\u0026quot;f=\u0026quot;,f)  c= 2 d= 9 e= 2 f= 3  a =[1,2,3,4,5] a[1:-1]=a a[1:-1]=[] print(a)  [1, 5]  a=[1,2] b = a b=b+[3] a  [1, 2]  a=[1,2] b = a b+=[3] a  [1, 2, 3]  import copy a = [1, 2, 3, 4, ['a', 'b']] #原始对象 b = a #赋值，传对象的引用 c = copy.","tags":[],"title":"list","type":"Python"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Hans"],"categories":["Demo"],"content":" Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup Academic Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt      Key features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes Academic comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"c94fbb8eb282b565be4322f417fc96f9","permalink":"/r/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/r/getting-started/","section":"R","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic"],"title":"Academic: the website builder for Hugo","type":"R"},{"authors":["Hans"],"categories":["Demo"],"content":" Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup Academic Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt      Key features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes Academic comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic"],"title":"Academic: the website builder for Hugo","type":"post"},{"authors":["Hans","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Hans","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"}]
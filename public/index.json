[{"authors":["admin"],"categories":null,"content":"We are interesting in math and programing !\n","date":1566691200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1566691200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"We are interesting in math and programing !","tags":null,"title":"Hans","type":"authors"},{"authors":null,"categories":null,"content":" Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":" Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["Hans"],"categories":[],"content":"\r將檔案的路徑上資料夾名稱的字串傳入,os.path.join 會返回檔案路徑的字串\nimport os\ros.path.join(\u0026#39;usr\u0026#39;, \u0026#39;bin\u0026#39;, \u0026#39;spam\u0026#39;)\r## \u0026#39;usr\\\\bin\\\\spam\u0026#39;\rmyFiles = [\u0026#39;accounts.txt\u0026#39;, \u0026#39;details.csv\u0026#39;, \u0026#39;invite.docx\u0026#39;]\rfor filename in myFiles:\rprint(os.path.join(\u0026#39;C:\\\\Users\\\\asweigart\u0026#39;, filename))\r## C:\\Users\\asweigart\\accounts.txt\r## C:\\Users\\asweigart\\details.csv\r## C:\\Users\\asweigart\\invite.docx\r目前的工作目錄\rimport os\ros.getcwd()\r## \u0026#39;C:\\\\r_web\\\\blogdown\\\\content\\\\Python\\\\file\u0026#39;\r\r切換目前的工作目錄\ros.chdir(\u0026#39;C:\\\\Windows\\\\System32\u0026#39;)\ros.getcwd()\r## \u0026#39;C:\\\\Windows\\\\System32\u0026#39;\r\r建立新的資料夾\r1+1\r#os.makedirs(\u0026#39;C:\\\\delicious\\\\walnut\\\\waffle\u0026#39;)\r## 2\r\ros.path 模組\r\ros.path.abspath(path) 會返回引數的絕對路徑\ros.path.isabs(path) 如果引數為絕對路徑則返回TRUE,相對路徑返回False\ros.path.relpath(path, start) 會返回從start路徑到path的相對路徑的字串,如果沒有傳入start,就使用目前的工作目錄\r\ros.path.abspath(\u0026#39;.\u0026#39;)\r## \u0026#39;C:\\\\r_web\\\\blogdown\\\\content\\\\Python\\\\file\u0026#39;\ros.path.abspath(\u0026#39;.\\\\Scripts\u0026#39;)\r## \u0026#39;C:\\\\r_web\\\\blogdown\\\\content\\\\Python\\\\file\\\\Scripts\u0026#39;\ros.path.isabs(\u0026#39;.\u0026#39;)\r## False\ros.path.isabs(os.path.abspath(\u0026#39;.\u0026#39;))\r## True\ros.path.relpath(\u0026#39;C:\\\\Windows\u0026#39;, \u0026#39;C:\\\\\u0026#39;)\r## \u0026#39;Windows\u0026#39;\ros.path.relpath(\u0026#39;C:\\\\Windows\u0026#39;, \u0026#39;C:\\\\spam\\\\eggs\u0026#39;)\r## \u0026#39;..\\\\..\\\\Windows\u0026#39;\ros.getcwd() \r## \u0026#39;C:\\\\r_web\\\\blogdown\\\\content\\\\Python\\\\file\u0026#39;\r\ros.path.dirnames(path) 會返回一個字串,該字串含有path引數中最後一個反斜線之前的所有路徑內容\n\ros.path.basename(path) 會返回一個字串,該字串含有path引數中最後一個反斜線之後的所有路徑內容\n\ros.path.split() 會返回一個tuple, 包含路徑名稱和檔案名稱\n\r\rpath = \u0026#39;C:\\\\Windows\\\\System32\\\\calc.exe\u0026#39;\ros.path.dirname(path)\r## \u0026#39;C:\\\\Windows\\\\System32\u0026#39;\ros.path.basename(path)\r## \u0026#39;calc.exe\u0026#39;\rcalcFilePath = \u0026#39;C:\\\\Windows\\\\System32\\\\calc.exe\u0026#39;\ros.path.split(calcFilePath)\r## (\u0026#39;C:\\\\Windows\\\\System32\u0026#39;, \u0026#39;calc.exe\u0026#39;)\ros.path.split() 沒有辦法把一個檔案路經照每個資料夾分割開, 但可用split()字串方法將os.path.sep中的字串進行分割\ncalcFilePath.split(os.path.sep)\r## [\u0026#39;C:\u0026#39;, \u0026#39;Windows\u0026#39;, \u0026#39;System32\u0026#39;, \u0026#39;calc.exe\u0026#39;]\r在 linux 中系統返回字串的第一個項目是空字串\n\u0026#39;/usr/bin\u0026#39;.split(os.path.sep)\r## [\u0026#39;/usr/bin\u0026#39;]\r\r找出檔案大小和資料夾內容\r\rCalling os.path.getsize(path) will return the size in bytes of the file in the path argument.\n\rCalling os.listdir(path) 會返回檔案名稱的串列,該串列為path引數下的所有檔案 (Note that this function is in the os module, not os.path.)\n\r\ros.path.getsize(\u0026#39;C:\\\\Windows\\\\System32\\\\calc.exe\u0026#39;)\r#os.listdir(\u0026#39;C:\\\\Windows\\\\System32\u0026#39;)\r## 27648\r想知道某個目錄下所有檔案的大小位元數,可同時使用os.path.getsize() and os.listdir()\ntotalSize = 0\rfor filename in os.listdir(\u0026#39;C:\\\\Windows\\\\System32\u0026#39;):\rtotalSize = totalSize + os.path.getsize(os.path.join(\u0026#39;C:\\\\Windows\\\\System32\u0026#39;, filename))\rprint(totalSize)\r## 2356979478\r\r檢查路徑是否存在\r\rCalling os.path.exists(path) will return True if the file or folder referred to in the argument exists and will return False if it does not exist.\n\rCalling os.path.isfile(path) will return True if the path argument exists and is a file and will return False otherwise.\n\rCalling os.path.isdir(path) will return True if the path argument exists and is a folder and will return False otherwise.\n\r\ros.path.exists(\u0026#39;C:\\\\Windows\u0026#39;)\r## True\ros.path.exists(\u0026#39;C:\\\\some_made_up_folder\u0026#39;)\r## False\ros.path.isdir(\u0026#39;C:\\\\Windows\\\\System32\u0026#39;)\r## True\ros.path.isfile(\u0026#39;C:\\\\Windows\\\\System32\u0026#39;)\r## False\ros.path.isdir(\u0026#39;C:\\\\Windows\\\\System32\\\\calc.exe\u0026#39;)\r## False\ros.path.isfile(\u0026#39;C:\\\\Windows\\\\System32\\\\calc.exe\u0026#39;)\r## True\r\r","date":1566691200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566691200,"objectID":"c185a646cc8a513910dcfc85c453e16d","permalink":"/python/file/file/","publishdate":"2019-08-25T00:00:00Z","relpermalink":"/python/file/file/","section":"Python","summary":"檔案操作","tags":[],"title":"檔案操作","type":"Python"},{"authors":["Hans"],"categories":[],"content":"\rContent comes from https://adv-r.hadley.nz/\nIntroduction\rA functional is a function that takes a function as an input and returns a vector as output. Here’s a simple functional: it calls the function provided as input with 1000 random uniform numbers.\nrandomise \u0026lt;- function(f) f(runif(1e3))\rrandomise(mean)\r## [1] 0.4916487\rrandomise(mean)\r## [1] 0.4962513\rrandomise(sum)\r## [1] 494.0721\rThis chapter will focus on functionals provided by the purrr package\nlibrary(purrr)\rtriple \u0026lt;- function(x) x * 3\rmap(1:3, triple)\r## [[1]]\r## [1] 3\r## ## [[2]]\r## [1] 6\r## ## [[3]]\r## [1] 9\r如下圖: map function 回傳 list\n下面map__*則回傳特定的atomic vector\nThese examples rely on two facts: mtcars is a data frame, and data frames are lists containing vectors of the same length. This is more obvious if we draw a data frame with the same orientation as vector: # map_chr() always returns a character vector\rmap_chr(mtcars, typeof)\r## mpg cyl disp hp drat wt qsec vs ## \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; ## am gear carb ## \u0026quot;double\u0026quot; \u0026quot;double\u0026quot; \u0026quot;double\u0026quot;\r# map_lgl() always returns a logical vector\rmap_lgl(mtcars, is.double)\r## mpg cyl disp hp drat wt qsec vs am gear carb ## TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\r# map_int() always returns a integer vector\rn_unique \u0026lt;- function(x) length(unique(x))\rmap_int(mtcars, n_unique)\r## mpg cyl disp hp drat wt qsec vs am gear carb ## 25 3 27 22 22 29 30 2 2 3 6\r# map_dbl() always returns a double vector\rmap_dbl(mtcars, mean)\r## mpg cyl disp hp drat wt ## 20.090625 6.187500 230.721875 146.687500 3.596563 3.217250 ## qsec vs am gear carb ## 17.848750 0.437500 0.406250 3.687500 2.812500\r\rAnonymous functions and shortcuts\rmap_dbl(mtcars, function(x) length(unique(x)))\r## mpg cyl disp hp drat wt qsec vs am gear carb ## 25 3 27 22 22 29 30 2 2 3 6\r簡化寫法:\nmap_dbl(mtcars, ~ length(unique(.x)))\r## mpg cyl disp hp drat wt qsec vs am gear carb ## 25 3 27 22 22 29 30 2 2 3 6\r以下寫法通常用來產生data:\nx \u0026lt;- map(1:3, ~runif(2))\rstr(x)\r## List of 3\r## $ : num [1:2] 0.571 0.815\r## $ : num [1:2] 0.356 0.153\r## $ : num [1:2] 0.909 0.385\rThe map functions for extracting elements from a vector , You can use a character vector to select elements by name, an integer vector to select by position, or a list to select by both name and position.These are very useful for working with deeply nested lists, which often arise when working with JSON.\nx \u0026lt;- list(\rlist(-1, x = 1, y = c(2), z = \u0026quot;a\u0026quot;),\rlist(-2, x = 4, y = c(5, 6), z = \u0026quot;b\u0026quot;),\rlist(-3, x = 8, y = c(9, 10, 11))\r)\r# Select by name\rmap_dbl(x, \u0026quot;x\u0026quot;)\r## [1] 1 4 8\r#\u0026gt; [1] 1 4 8\r# Or by position\rmap_dbl(x, 1)\r## [1] -1 -2 -3\r#\u0026gt; [1] -1 -2 -3\r# Or by both\rmap_dbl(x, list(\u0026quot;y\u0026quot;, 1))\r## [1] 2 5 9\r#\u0026gt; [1] 2 5 9\r# You\u0026#39;ll get an error if a component doesn\u0026#39;t exist:\r#map_chr(x, \u0026quot;z\u0026quot;)\r#\u0026gt; Error: Result 3 must be a single string, not NULL of length 0\r# Unless you supply a .default value\rmap_chr(x, \u0026quot;z\u0026quot;, .default = NA)\r## [1] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; NA\r\rPassing arguments with ...\rIt’s often convenient to pass along additional arguments to the function that you’re calling. For example, you might want to pass na.rm = TRUE along to mean(). One way to do that is with an anonymous function:\nY \u0026lt;- list(1:5, c(1:10, NA))\rmap_dbl(Y, ~ mean(.x, na.rm = TRUE))\r## [1] 3.0 5.5\rBut because the map functions pass ... along, there’s a simpler form available:\nmap_dbl(x, mean, na.rm = TRUE)\r## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:\r## returning NA\r## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:\r## returning NA\r## Warning in mean.default(.x[[i]], ...): argument is not numeric or logical:\r## returning NA\r## [1] NA NA NA\rmap(直觀圖:\nNote there’s a subtle difference between placing extra arguments inside an anonymous function compared with passing them to map(). Putting them in an anonymous function means that they will be evaluated every time f() is executed, not just once when you call map(). This is easiest to see if we make the additional argument random:\nplus \u0026lt;- function(x, y) x + y\rx \u0026lt;- c(1, 2, 3, 4)\rmap_dbl(x, plus, runif(1))# runif(1) 只使用一次的結果\r## [1] 1.868745 2.868745 3.868745 4.868745\rmap_dbl(x, ~ plus(.x, runif(1))) #x長度4,所以使用4次runif(1)\r## [1] 1.280945 2.089418 3.053643 4.575404\r\rVarying another argument\rHow do you get the result in this picture?\nIt turns out that there’s no way to do it directly, but there are two tricks you can use instead. To illustrate them, imagine I have a vector that contains a few unusual values, and I want to explore the effect of different amounts of trimming when computing the mean. In this case, the first argument to mean() will be constant, and I want to vary the second argument, trim.\ntrims \u0026lt;- c(0, 0.1, 0.2, 0.5)\rx \u0026lt;- rcauchy(1000)\r\rThe simplest technique is to use an anonymous function to rearrange the argument order:\r\rmap_dbl(trims, ~ mean(x, trim = .x))\r## [1] 0.02602539 -0.02371783 -0.01273051 -0.02817497\r#or\rmap_dbl(trims, function(trim) mean(x, trim = trim))\r## [1] 0.02602539 -0.02371783 -0.01273051 -0.02817497\r\rPurrr style\rBefore we go on to explore more map variants, let’s take a quick look at how you tend to use multiple purrr functions to solve a moderately realistic problem: fitting a model to each subgroup and extracting a coefficient of the model. For this toy example, I’m going to break the mtcars data set down into groups defined by the number of cylinders, using the base split function:\nby_cyl \u0026lt;- split(mtcars, mtcars$cyl)\rThis creates a list of three data frames: the cars with 4, 6, and 8 cylinders respectively.\nNow imagine we want to fit a linear model, then extract the second coefficient (i.e. the slope). The following code shows how you might do that with purrr:\nby_cyl %\u0026gt;% map(function(x) lm(mpg ~ wt, data = x)) %\u0026gt;% #(or map(~ lm(mpg ~ wt, data = .x)))\rmap(coef) %\u0026gt;% map_dbl(2)\r## 4 6 8 ## -5.647025 -2.780106 -2.192438\r同以下寫法:\nby_cyl %\u0026gt;% lapply(function(data) lm(mpg ~ wt, data = data)) %\u0026gt;% lapply(coef) %\u0026gt;% vapply(function(x) x[[2]], double(1))\r## 4 6 8 ## -5.647025 -2.780106 -2.192438\rmodels \u0026lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))\rvapply(models, function(x) coef(x)[[2]], double(1))\r## 4 6 8 ## -5.647025 -2.780106 -2.192438\rintercepts \u0026lt;- double(length(by_cyl))\rfor (i in seq_along(by_cyl)) {\rmodel \u0026lt;- lm(mpg ~ wt, data = by_cyl[[i]])\rintercepts[[i]] \u0026lt;- coef(model)[[2]]\r}\rintercepts\r## [1] -5.647025 -2.780106 -2.192438\r\rMap variants\rfive new ideas:\nOutput same type as input with modify()\n\rIterate over two inputs with map2().\n\rIterate with an index using imap()\n\rReturn nothing with walk().\n\rIterate over any number of inputs with pmap().\n\r\rThe map family of functions has orthogonal input and outputs, meaning that we can organise all the family into a matrix, with inputs in the rows and outputs in the columns. Once you’ve mastered the idea in a row, you can combine it with any column; once you’ve mastered the idea in a column, you can combine it with any row. That relationship is summarised in the following table:\n\r\r\r\r\rList\r\r\rAtomic\r\r\rSame type\r\r\rNothing\r\r\r\r\r\rOne argument\r\r\rmap()\r\r\rmap_lgl(), …\r\r\rmodify()\r\r\rwalk()\r\r\r\rTwo arguments\r\r\rmap2()\r\r\rmap2_lgl(), …\r\r\rmodify2()\r\r\rwalk2()\r\r\r\rOne argument + index\r\r\rimap()\r\r\rimap_lgl(), …\r\r\rimodify()\r\r\riwalk()\r\r\r\rN arguments\r\r\rpmap()\r\r\rpmap_lgl(), …\r\r\r—\r\r\rpwalk()\r\r\r\r\r1. modify()\rImagine you wanted to double every column in a data frame. You might first try using map(), but map() always returns a list:\ndf \u0026lt;- data.frame(\rx = 1:3,\ry = 6:4\r)\rmap(df, function(x) x * 2)\r## $x\r## [1] 2 4 6\r## ## $y\r## [1] 12 10 8\rIf you want to keep the output as a data frame, you can use modify(), which always returns the same type of output as the input:\nmodify(df, function(x) x * 2)\r## x y\r## 1 2 12\r## 2 4 10\r## 3 6 8\rmodify() doesn’t modify in place, it returns a modified copy, so if you wanted to permanently modify df, you’d need to assign it:\ndf \u0026lt;- modify(df, ~ .x * 2)\r\r2. Two inputs: map2() and friends\rmap() is vectorised over a single argument, .x. This means it only varies .x when calling .f, and all other arguments are passed along unchanged , thus making it poorly suited for some problems. For example, how would you find a weighted mean when you have a list of observations and a list of weights? Imagine we have the following data:\nxs \u0026lt;- map(1:8, ~ runif(10))\rxs[[1]][[1]] \u0026lt;- NA\rws \u0026lt;- map(1:8, ~ rpois(10, 5) + 1)\rYou can use map_dbl() to compute the unweighted means:\nmap_dbl(xs, mean)\r## [1] NA 0.5158276 0.5900633 0.4635794 0.4517843 0.6939639 0.4917745\r## [8] 0.4680941\rBut passing ws as an additional argument doesn’t work because arguments after .fare not transformed:\nmap_dbl(xs, weighted.mean, w = ws)\r## Error in weighted.mean.default(.x[[i]], ...): \u0026#39;x\u0026#39; and \u0026#39;w\u0026#39; must have the same length\rWe need a new tool: a map2(), which is vectorised over two arguments. This means both .x and .y are varied in each call to .f:\nmap2_dbl(xs, ws, weighted.mean)\r## [1] NA 0.5513668 0.6491882 0.5108453 0.4285018 0.7153160 0.5383491\r## [8] 0.4303897\rThe arguments to map2() are slightly different to the arguments to map() as two vectors come before the function, rather than one. Additional arguments still go afterwards:\nmap2_dbl(xs, ws, weighted.mean, na.rm = TRUE)\r## [1] 0.5163370 0.5513668 0.6491882 0.5108453 0.4285018 0.7153160 0.5383491\r## [8] 0.4303897\rOne of the big differences between map2() and the simple function above is that map2() recycles its inputs to make sure that they’re the same length:\n\r3. No outputs: walk() and friends\rMost functions are called for the value that they return, so it makes sense to capture and store the value with a map() function. But some functions are called primarily for their side-effects (e.g. cat(), write.csv(), or ggsave()) and it doesn’t make sense to capture their results. Take this simple example that displays a welcome message using cat(). cat() returns NULL, so while map() works (in the sense that it generates the desired welcomes), it also returns list(NULL, NULL).\nwelcome \u0026lt;- function(x) {\rcat(\u0026quot;Welcome \u0026quot;, x, \u0026quot;!\\n\u0026quot;, sep = \u0026quot;\u0026quot;)\r}\rnames \u0026lt;- c(\u0026quot;Hadley\u0026quot;, \u0026quot;Jenny\u0026quot;)\r# As well as generate the welcomes, it also shows # the return value of cat()\rmap(names, welcome)\r## Welcome Hadley!\r## Welcome Jenny!\r## [[1]]\r## NULL\r## ## [[2]]\r## NULL\rpurrr provides the walk family of functions that ignore the return values of the .f and instead return .x invisibly\nwalk(names, welcome)\r## Welcome Hadley!\r## Welcome Jenny!\rOne of the most useful walk() variants is walk2() because a very common side-effect is saving something to disk, and when saving something to disk you always have a pair of values: the object and the path that you want to save it to. \rFor example, imagine you have a list of data frames (which I’ve created here using split()), and you’d like to save each one to a separate CSV file. That’s easy with walk2():\rtemp \u0026lt;- tempfile()\rdir.create(temp)\rcyls \u0026lt;- split(mtcars, mtcars$cyl)\rpaths \u0026lt;- file.path(temp, paste0(\u0026quot;cyl-\u0026quot;, names(cyls), \u0026quot;.csv\u0026quot;))\rwalk2(cyls, paths, write.csv)\rdir(temp)\r## [1] \u0026quot;cyl-4.csv\u0026quot; \u0026quot;cyl-6.csv\u0026quot; \u0026quot;cyl-8.csv\u0026quot;\r\rHere the walk2() is equivalent to write.csv(cyls[[1]], paths[[1]]), write.csv(cyls[[2]], paths[[2]]), write.csv(cyls[[3]], paths[[3]]).\r\r4. Iterating over values and indices imap\r\rThere are three basic ways to loop over a vector with a for loop:\r\r\rLoop over the elements: for (x in xs)\r\r\rLoop over the numeric indices: for (i in seq_along(xs))\r\r\rLoop over the names: for (nm in names(xs))\r\r\r\rThe first form is analogous to the map() family. The second and third forms are equivalent to the imap() family which allows you to iterate over the values and the indices of a vector in parallel.\r\rimap() is like map2() in the sense that your .f gets called with two arguments, but here both are derived from the vector. imap(x, f) is equivalent to map2(x, names(x), f) if x has names, and map2(x, seq_along(x), f) if it does not.\r\rimap() is often useful for constructing labels:\rIn the formula interface, .x refers to the list elements and .y refers to the names of the list.\nimap_chr(iris, ~ paste0(\u0026quot;The first value of \u0026quot;, .y, \u0026quot; is \u0026quot;, .x[[1]]))\r## Sepal.Length ## \u0026quot;The first value of Sepal.Length is 5.1\u0026quot; ## Sepal.Width ## \u0026quot;The first value of Sepal.Width is 3.5\u0026quot; ## Petal.Length ## \u0026quot;The first value of Petal.Length is 1.4\u0026quot; ## Petal.Width ## \u0026quot;The first value of Petal.Width is 0.2\u0026quot; ## Species ## \u0026quot;The first value of Species is setosa\u0026quot;\rIf the vector is unnamed, the second argument will be the index:\nx \u0026lt;- map(1:6, ~ sample(1000, 10))\rimap_chr(x, ~ paste0(\u0026quot;The highest value of \u0026quot;, .y, \u0026quot; is \u0026quot;, max(.x)))\r## [1] \u0026quot;The highest value of 1 is 855\u0026quot; \u0026quot;The highest value of 2 is 977\u0026quot;\r## [3] \u0026quot;The highest value of 3 is 930\u0026quot; \u0026quot;The highest value of 4 is 855\u0026quot;\r## [5] \u0026quot;The highest value of 5 is 980\u0026quot; \u0026quot;The highest value of 6 is 928\u0026quot;\r\rimap() is a useful helper if you want to work with the values in a vector along with their positions.\r\r5. Any number of inputs: pmap() and friends\r\rSince we have map() and map2(), you might expect map3(), map4(), map5(), … But where would you stop? Instead of generalising map2() to an arbitrary number of arguments, purrr takes a slightly different tack with pmap(): you supply it a single list, which contains any number of arguments. In most cases, that will be a list of equal-length vectors, i.e. something very similar to a data frame. In diagrams, I’ll emphasise that relationship by drawing the input similar to a data frame.\rAs before, the varying arguments come before .f (although now they must be wrapped in a list), and the constant arguments come afterwards.\npmap_dbl(list(xs, ws), weighted.mean, na.rm = TRUE)\r## [1] 0.5163370 0.5513668 0.6491882 0.5108453 0.4285018 0.7153160 0.5383491\r## [8] 0.4303897\rA big difference between pmap() and the other map functions is that pmap() gives you much finer control over argument matching because you can name the components of the list. Returning to our example from Section 9.2.5, where we wanted to vary the trim argument to x, we could instead use pmap():\ntrims \u0026lt;- c(0, 0.1, 0.2, 0.5)\rx \u0026lt;- rcauchy(1000)\rpmap_dbl(list(trim = trims), mean, x = x)\r## [1] 0.399274953 -0.017210836 0.009036891 0.034765922\rI think it’s good practice to name the components of the list to make it very clear how the function will be called.\nIt’s often convenient to call pmap() with a data frame. A handy way to create that data frame is with tibble::tribble(), which allows you to describe a data frame row-by-row\nparams \u0026lt;- tibble::tribble(\r~ n, ~ min, ~ max,\r1L, 0, 1,\r2L, 10, 100,\r3L, 100, 1000\r)\rpmap(params, runif)\r## [[1]]\r## [1] 0.227754\r## ## [[2]]\r## [1] 35.44222 72.86013\r## ## [[3]]\r## [1] 514.5174 926.9396 684.6923\rHere, the column names are critical: I’ve carefully chosen to match them to the arguments to runif(), so the pmap(params, runif) is equivalent to runif(n = 1L, min = 0, max = 1), runif(n = 2, min = 10, max = 100), runif(n = 3L, min = 100, max = 1000). (If you have a data frame in hand, and the names don’t match, use dplyr::rename() or similar.)\n\r\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"0b19b5807cc0025c84ec321b7ec964aa","permalink":"/r/advanced_r/functional/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/r/advanced_r/functional/","section":"R","summary":"Content comes from https://adv-r.hadley.nz/\nIntroduction\rA functional is a function that takes a function as an input and returns a vector as output. Here’s a simple functional: it calls the function provided as input with 1000 random uniform numbers.\nrandomise \u0026lt;- function(f) f(runif(1e3))\rrandomise(mean)\r## [1] 0.4916487\rrandomise(mean)\r## [1] 0.4962513\rrandomise(sum)\r## [1] 494.0721\rThis chapter will focus on functionals provided by the purrr package\nlibrary(purrr)\rtriple \u0026lt;- function(x) x * 3\rmap(1:3, triple)\r## [[1]]\r## [1] 3\r## ## [[2]]\r## [1] 6\r## ## [[3]]\r## [1] 9\r如下圖: map function 回傳 list","tags":[],"title":"Note-functional","type":"R"},{"authors":["Hans"],"categories":[],"content":"\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"be11691f44eb253d0402e504d39196ca","permalink":"/post/advanced_r/vector/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/post/advanced_r/vector/","section":"post","summary":"\r","tags":[],"title":"R(1)- basic vector","type":"post"},{"authors":["Hans"],"categories":[],"content":"\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"547ad86e400bedd71e8f55669b691001","permalink":"/reinforcement_learning/advanced_r/vector/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/reinforcement_learning/advanced_r/vector/","section":"Reinforcement_learning","summary":"\r","tags":[],"title":"R(690000)- basic vector","type":"Reinforcement_learning"},{"authors":["Hans"],"categories":[],"content":"\r\r\r字元分類\r表示\r\r\r\r\\d\r0-9的任何數字\r\r\\D\r除了0-9的任何數字\r\r\\w\r任何字母,數字或底線\r\r\\W\r除了字母,數字或底線以外的任何字元\r\r\\s\r空格,定位符號或換行符號\r\r\\S\r除了空格,定位符號或換行符號以外的任何字元\r\r\r\rThe ? matches zero or one of the preceding group.\r\rThe * matches zero or more of the preceding group.\r\rThe + matches one or more of the preceding group.\r\rThe {n} matches exactly n of the preceding group.\r\rThe {n,} matches n or more of the preceding group.\r\rThe {,m} matches 0 to m of the preceding group.\r\rThe {n,m} matches at least n and at most m of the preceding group.\r\r{n,m}? or *? or +? performs a nongreedy match of the preceding group.\r\r^spam means the string must begin with spam.\r\rspam$ means the string must end with spam.\r\rThe . matches any character, except newline characters.\r\r\r\r\r\\d, \\w, and \\s match a digit, word, or space character, respectively.\n\r\\D, \\W, and \\S match anything except a digit, word, or space character, respectively.\n\r[abc] matches any character between the brackets (such as a, b, or c).\n\r[^abc] matches any character that isn’t between the brackets.\n\r\rpython 正規表達式 都在re模組\rimport re\rre.complie() 建立 Regex物件 (記得使用原始字串 (r))\r對 Regex 物件的 search() 方法傳入想要尋找的字串,會返回一個Match物件\r呼叫Match物件的group()方法,返回實際比對符合的字串\r\rimport re\rphoneNumRegex = re.compile(r\u0026#39;\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d\u0026#39;)\rmo = phoneNumRegex.search(\u0026#39;My number is 415-555-4242.\u0026#39;)\rprint(\u0026#39;Phone number found: \u0026#39; + mo.group())\r## Phone number found: 415-555-4242\r我們想要把區域號碼從電話號碼中分開,可在正規表達式中加上括號來分組:\n(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)\n隨後使用 group() 方法從某個分組中取得比對符合的文字\nphoneNumRegex = re.compile(r\u0026#39;(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)\u0026#39;)\rmo = phoneNumRegex.search(\u0026#39;My number is 415-555-4242.\u0026#39;)\rmo.group(1)\r## \u0026#39;415\u0026#39;\rmo.group(2)\r## \u0026#39;555-4242\u0026#39;\rmo.group(0)\r## \u0026#39;415-555-4242\u0026#39;\rmo.group()\r## \u0026#39;415-555-4242\u0026#39;\r想要一次取得所有的分組,可用groups()方法\nmo.groups()\r## (\u0026#39;415\u0026#39;, \u0026#39;555-4242\u0026#39;)\rareaCode,mainNumber = mo.groups()\rprint(areaCode)\r## 415\rprint(mainNumber)\r## 555-4242\r想要在字串中比對括號,使用\\( 和 \\)\n在傳入 re.compile()的原始字串內的\\( 和 \\)會變得實際比對()括號\nphoneNumRegex = re.compile(r\u0026#39;(\\(\\d\\d\\d\\)) (\\d\\d\\d-\\d\\d\\d\\d)\u0026#39;)\rmo = phoneNumRegex.search(\u0026#39;My phone number is (415) 555-4242.\u0026#39;)\rmo.group(1)\r## \u0026#39;(415)\u0026#39;\rmo.group(2)\r## \u0026#39;555-4242\u0026#39;\rMatching Multiple Groups with the Pipe\r正規表達式 r’Batman|Tina Fey’ 會比對 ‘Batman’ 或 ‘Tina Fey’\nheroRegex = re.compile (r\u0026#39;Batman|Tina Fey\u0026#39;)\rmo1 = heroRegex.search(\u0026#39;Batman and Tina Fey.\u0026#39;)\rmo1.group()\r## \u0026#39;Batman\u0026#39;\r想要比對’Batman’, ‘Batmobile’, ‘Batcopter’, ‘Batbat’ 中任一個都符合,因為都以’Bat’開頭 所以只要指定一次前置文字即可,利用括號\nbatRegex = re.compile(r\u0026#39;Bat(man|mobile|copter|bat)\u0026#39;)\rmo = batRegex.search(\u0026#39;Batmobile lost a wheel\u0026#39;)\rmo.group()\r## \u0026#39;Batmobile\u0026#39;\rmo.group(1)\r## \u0026#39;mobile\u0026#39;\r\rOptional Matching with the Question Mark\r問號表示無論內容是否存在,正規表達式都會比對符合\n?字元表示他前面括號的分組在這模式中是可選擇性的\n?字元可看成 這個問號前的分組比對符合1次或0次都可以\nbatRegex = re.compile(r\u0026#39;Bat(wo)?man\u0026#39;)\rmo1 = batRegex.search(\u0026#39;The Adventures of Batman\u0026#39;)\rmo1.group()\r## \u0026#39;Batman\u0026#39;\rmo2 = batRegex.search(\u0026#39;The Adventures of Batwoman\u0026#39;)\rmo2.group()\r## \u0026#39;Batwoman\u0026#39;\r用前面電話號碼來做說明,可在正規表達式中尋找含有區號和不含區號的電話號碼\nphoneRegex = re.compile(r\u0026#39;(\\d\\d\\d-)?\\d\\d\\d-\\d\\d\\d\\d\u0026#39;)\rmo1 = phoneRegex.search(\u0026#39;My number is 415-555-4242\u0026#39;)\rmo1.group()\r## \u0026#39;415-555-4242\u0026#39;\rmo2 = phoneRegex.search(\u0026#39;My number is 555-4242\u0026#39;)\rmo2.group()\r## \u0026#39;555-4242\u0026#39;\r\rMatching Zero or More with the Star\r* 字元可看成 這個星號前的分組比對符合多次或0次都可以\nbatRegex = re.compile(r\u0026#39;Bat(wo)*man\u0026#39;)\rmo1 = batRegex.search(\u0026#39;The Adventures of Batman\u0026#39;)\rmo1.group()\r\r## \u0026#39;Batman\u0026#39;\rmo2 = batRegex.search(\u0026#39;The Adventures of Batwoman\u0026#39;)\rmo2.group()\r\r## \u0026#39;Batwoman\u0026#39;\rmo3 = batRegex.search(\u0026#39;The Adventures of Batwowowowoman\u0026#39;)\rmo3.group()\r## \u0026#39;Batwowowowoman\u0026#39;\r\rMatching One or More with the Plus\r+字元可看成 這個+前的分組比對符合多次或1次都可以\nbatRegex = re.compile(r\u0026#39;Bat(wo)+man\u0026#39;)\rmo1 = batRegex.search(\u0026#39;The Adventures of Batwoman\u0026#39;)\rmo1.group()\r\r## \u0026#39;Batwoman\u0026#39;\rmo2 = batRegex.search(\u0026#39;The Adventures of Batwowowowoman\u0026#39;)\rmo2.group()\r\r## \u0026#39;Batwowowowoman\u0026#39;\rmo3 = batRegex.search(\u0026#39;The Adventures of Batman\u0026#39;)\rmo3 == None\r## True\r\rMatching Specific Repetitions with Curly Brackets(大括號)\r(Ha){3} 與 (Ha)(Ha)(Ha) 表達意思相同\n(Ha){3,5} 與 ((Ha)(Ha)(Ha))|((Ha)(Ha)(Ha)(Ha))|((Ha)(Ha)(Ha)(Ha)(Ha)) 表達意思相同\n(Ha){3,} 表示比對符合至少3次以上\nhaRegex = re.compile(r\u0026#39;(Ha){3}\u0026#39;)\rmo1 = haRegex.search(\u0026#39;HaHaHa\u0026#39;)\rmo1.group()\r\r## \u0026#39;HaHaHa\u0026#39;\rmo2 = haRegex.search(\u0026#39;Ha\u0026#39;)\rmo2 == None\r## True\r\rGreedy and Nongreedy Matching\rpython 正規表達式預設是greedy版本,就是盡可能找到最長符合比對的字串\n在大括弧後面加上一個問號,大括弧的non-greedy版本會盡可能找到最短符合比對的字串\ngreedyHaRegex = re.compile(r\u0026#39;(Ha){3,5}\u0026#39;)\rmo1 = greedyHaRegex.search(\u0026#39;HaHaHaHaHa\u0026#39;)\rmo1.group()\r## \u0026#39;HaHaHaHaHa\u0026#39;\rnongreedyHaRegex = re.compile(r\u0026#39;(Ha){3,5}?\u0026#39;)\rmo2 = nongreedyHaRegex.search(\u0026#39;HaHaHaHaHa\u0026#39;)\rmo2.group()\r## \u0026#39;HaHaHa\u0026#39;\r\rThe findall() Method\rsearch()方法會返回一個match物件,此物件內含有尋找比對字串中第一次找到符合的文字\nfindall()方法則返回一組list,這組list為尋找比對字串中所有符合的文字內容\nphoneNumRegex = re.compile(r\u0026#39;\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d\u0026#39;)\rmo = phoneNumRegex.search(\u0026#39;Cell: 415-555-9999 Work: 212-555-0000\u0026#39;)\rmo.group()\r## \u0026#39;415-555-9999\u0026#39;\rphoneNumRegex = re.compile(r\u0026#39;\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d\u0026#39;) # has no groups\rphoneNumRegex.findall(\u0026#39;Cell: 415-555-9999 Work: 212-555-0000\u0026#39;)\r## [\u0026#39;415-555-9999\u0026#39;, \u0026#39;212-555-0000\u0026#39;]\r如果有分組,那findall會返回一個多元組(list of tuples)的list,每個多元組代表一個比對符合的內容\nphoneNumRegex = re.compile(r\u0026#39;(\\d\\d\\d)-(\\d\\d\\d)-(\\d\\d\\d\\d)\u0026#39;) # has groups\rphoneNumRegex.findall(\u0026#39;Cell: 415-555-9999 Work: 212-555-0000\u0026#39;)\r## [(\u0026#39;415\u0026#39;, \u0026#39;555\u0026#39;, \u0026#39;9999\u0026#39;), (\u0026#39;212\u0026#39;, \u0026#39;555\u0026#39;, \u0026#39;0000\u0026#39;)]\r\r\rCharacter Classes\r\r\r字元分類\r表示\r\r\r\r\\d\r0-9的任何數字\r\r\\D\r除了0-9的任何數字\r\r\\w\r任何字母,數字或底線\r\r\\W\r除了字母,數字或底線以外的任何字元\r\r\\s\r空格,定位符號或換行符號\r\r\\S\r除了空格,定位符號或換行符號以外的任何字元\r\r\r\r\\d is shorthand for the regular expression (0|1|2|3|4|5|6|7|8|9)\n[0-5] is shorthand for the regular expression (0|1|2|3|4|5)\nxmasRegex = re.compile(r\u0026#39;\\d+\\s\\w+\u0026#39;)\rxmasRegex.findall(\u0026#39;12 drummers, 11 pipers, 10 lords, 9 ladies, 8 maids, 7 swans, 6 geese, 5 rings, 4 birds, 3 hens, 2 doves, 1 partridge\u0026#39;)\r## [\u0026#39;12 drummers\u0026#39;, \u0026#39;11 pipers\u0026#39;, \u0026#39;10 lords\u0026#39;, \u0026#39;9 ladies\u0026#39;, \u0026#39;8 maids\u0026#39;, \u0026#39;7 swans\u0026#39;, \u0026#39;6 geese\u0026#39;, \u0026#39;5 rings\u0026#39;, \u0026#39;4 birds\u0026#39;, \u0026#39;3 hens\u0026#39;, \u0026#39;2 doves\u0026#39;, \u0026#39;1 partridge\u0026#39;]\rMaking Your Own Character Classes\r[a-zA-Z0-9]會比對找出所有小寫字母,大寫字母或數字\nnote: 在中括號內的普通正規表達式不會被解釋執行\nex:[0-5.] 會比對找出0到5的數字和句點,我們不需要寫成 [0-5.]\nvowelRegex = re.compile(r\u0026#39;[aeiouAEIOU]\u0026#39;)\rvowelRegex.findall(\u0026#39;Robocop eats baby food. BABY FOOD.\u0026#39;)\r## [\u0026#39;o\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;A\u0026#39;, \u0026#39;O\u0026#39;, \u0026#39;O\u0026#39;]\r^ 可取得 比對找出不在這個字元分類以外的所有字元\nconsonantRegex = re.compile(r\u0026#39;[^aeiouAEIOU]\u0026#39;)\rconsonantRegex.findall(\u0026#39;Robocop eats baby food. BABY FOOD.\u0026#39;)\r## [\u0026#39;R\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;p\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;s\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;y\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;f\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;.\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;Y\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;F\u0026#39;, \u0026#39;D\u0026#39;, \u0026#39;.\u0026#39;]\r\rThe ^ and $ Characters\rr’^Hello’ 是要比對找出符合’Hello’為起始的字串\nbeginsWithHello = re.compile(r\u0026#39;^Hello\u0026#39;)\rbeginsWithHello.search(\u0026#39;Hello world!\u0026#39;)\r## \u0026lt;_sre.SRE_Match object; span=(0, 5), match=\u0026#39;Hello\u0026#39;\u0026gt;\rbeginsWithHello.search(\u0026#39;He said hello.\u0026#39;) == None\r## True\rr’\\d$’ 是要比對找出符合以數字0到9為結尾的字串\nendsWithNumber = re.compile(r\u0026#39;\\d$\u0026#39;)\rendsWithNumber.search(\u0026#39;Your number is 42\u0026#39;)\r## \u0026lt;_sre.SRE_Match object; span=(16, 17), match=\u0026#39;2\u0026#39;\u0026gt;\rendsWithNumber.search(\u0026#39;Your number is forty two.\u0026#39;) == None\r## True\rr’^+$’ 是要比對找出至少一個符合以開頭到結尾都是數字0到9的字串\nwholeStringIsNum = re.compile(r\u0026#39;^\\d+$\u0026#39;)\rwholeStringIsNum.search(\u0026#39;1234567890\u0026#39;)\r## \u0026lt;_sre.SRE_Match object; span=(0, 10), match=\u0026#39;1234567890\u0026#39;\u0026gt;\rwholeStringIsNum.search(\u0026#39;12345xyz67890\u0026#39;) == None\r## True\rwholeStringIsNum.search(\u0026#39;12 34567890\u0026#39;) == None\r## True\r\rThe Wildcard Character 萬用字元.\r. 子元是萬用字元,尋找除了換行符號的所有字元\natRegex = re.compile(r\u0026#39;.at\u0026#39;)\ratRegex.findall(\u0026#39;The cat in the hat sat on the flat mat.\u0026#39;)\r## [\u0026#39;cat\u0026#39;, \u0026#39;hat\u0026#39;, \u0026#39;sat\u0026#39;, \u0026#39;lat\u0026#39;, \u0026#39;mat\u0026#39;]\r\rMatching Everything with Dot-Star 使用.*尋找所有字元\rnameRegex = re.compile(r\u0026#39;First Name: (.*) Last Name: (.*)\u0026#39;)\rmo = nameRegex.search(\u0026#39;First Name: Al Last Name: Sweigart\u0026#39;)\rmo.group(1)\r## \u0026#39;Al\u0026#39;\rmo.group(2)\r## \u0026#39;Sweigart\u0026#39;\rgreedy and non-greedy\nnongreedyRegex = re.compile(r\u0026#39;\u0026lt;.*?\u0026gt;\u0026#39;)\rmo = nongreedyRegex.search(\u0026#39;\u0026lt;To serve man\u0026gt; for dinner.\u0026gt;\u0026#39;)\rmo.group()\r\r## \u0026#39;\u0026lt;To serve man\u0026gt;\u0026#39;\rgreedyRegex = re.compile(r\u0026#39;\u0026lt;.*\u0026gt;\u0026#39;)\rmo = greedyRegex.search(\u0026#39;\u0026lt;To serve man\u0026gt; for dinner.\u0026gt;\u0026#39;)\rmo.group()\r## \u0026#39;\u0026lt;To serve man\u0026gt; for dinner.\u0026gt;\u0026#39;\r\r比對所有字元,包括換行字元\rnoNewlineRegex = re.compile(\u0026#39;.*\u0026#39;)\rnoNewlineRegex.search(\u0026#39;Serve the public trust.\\nProtect the innocent.\\nUphold the law.\u0026#39;).group()\r\r## \u0026#39;Serve the public trust.\u0026#39;\rnewlineRegex = re.compile(\u0026#39;.*\u0026#39;, re.DOTALL)\rnewlineRegex.search(\u0026#39;Serve the public trust.\\nProtect the innocent.\\nUphold the law.\u0026#39;).group()\r## \u0026#39;Serve the public trust.\\nProtect the innocent.\\nUphold the law.\u0026#39;\r\r比對時不區分大小寫\r把re.I當作第2個引數傳入re.compile\nrobocop = re.compile(r\u0026#39;robocop\u0026#39;, re.I)\rrobocop.search(\u0026#39;Robocop is part man, part machine, all cop.\u0026#39;).group()\r## \u0026#39;Robocop\u0026#39;\rrobocop.search(\u0026#39;ROBOCOP protects the innocent.\u0026#39;).group()\r## \u0026#39;ROBOCOP\u0026#39;\rrobocop.search(\u0026#39;Al, why does your programming book talk about robocop so much?\u0026#39;).group()\r## \u0026#39;robocop\u0026#39;\r\r\r使用sub()方法取代字串\rnamesRegex = re.compile(r\u0026#39;Agent \\w+\u0026#39;)\rnamesRegex.sub(\u0026#39;CENSORED\u0026#39;, \u0026#39;Agent Alice gave the secret documents to Agent Bob.\u0026#39;)\r## \u0026#39;CENSORED gave the secret documents to CENSORED.\u0026#39;\r\r正規表達式中使用注釋\r不+注釋:複雜的正規表達式會非常難以閱讀 phoneRegex = re.compile(r’((\\d{3}|\\(\\))?(\\s|-|\\.)?\\d{3}(\\s|-|\\.)\\d{4}\n(\\s(ext|x|ext.)\\s\\d{2,5})?)’)\n增加注釋:使用re.VERBOSE當作第2個引數傳入re.compile中\nphoneRegex = re.compile(r\u0026#39;\u0026#39;\u0026#39;(\r(\\d{3}|\\(\\d{3}\\))? # area code\r(\\s|-|\\.)? # separator\r\\d{3} # first 3 digits\r(\\s|-|\\.) # separator\r\\d{4} # last 4 digits\r(\\s*(ext|x|ext.)\\s*\\d{2,5})? # extension\r)\u0026#39;\u0026#39;\u0026#39;, re.VERBOSE)\r\r\r組合使用 re.IGNORECASE, re.DOTALL, and re.VERBOSE\r想要使用re.VERBOSE增加注釋,還希望用re.IGNORECASE忽略大小寫,但是re.compile只接受一個值當作第二個引數\n想解決可使用(|)把re.IGNORECASE, re.DOTALL, and re.VERBOSE組合起來\nex:早要不區分大小寫,且比對尋找時包含換行符號,且增加注釋,可以這樣寫:\n\rsomeRegexValue = re.compile(\u0026#39;foo\u0026#39;, re.IGNORECASE | re.DOTALL | re.VERBOSE)\r\r","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564963200,"objectID":"0427be79d349c39dbb198e5c86d54a7f","permalink":"/python/regular-expression/regular_expression/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/python/regular-expression/regular_expression/","section":"Python","summary":"regular expression is quick!","tags":[],"title":"regular-expression","type":"Python"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file and adding markup: mmark to your page front matter.\nTo render inline or block math, wrap your LaTeX math with $$...$$.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n\\[\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}\\]\nExample inline math $$\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2$$ renders as \\(\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2\\) .\nExample multi-line math using the \\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n\\[f(k;p_0^*) = \\begin{cases} p_0^* \u0026 \\text{if }k=1, \\\\ 1-p_0^* \u0026 \\text {if }k=0.\\end{cases}\\]\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; ```  renders as\ngraph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D;  An example sequence diagram:\n```mermaid sequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d ```  renders as\ngantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a Markdown extension for asides, also referred to as notices or hints. By prefixing a paragraph with A\u0026gt;, it will render as an aside. You can enable this feature by adding markup: mmark to your page front matter, or alternatively using the Alert shortcode.\nA\u0026gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.\n Did you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"06391f81065c05b2848d8cd00330eba1","permalink":"/r/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/r/writing-technical-content/","section":"R","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.","tags":null,"title":"Writing technical content in Academic","type":"R"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file and adding markup: mmark to your page front matter.\nTo render inline or block math, wrap your LaTeX math with $$...$$.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n\\[\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}\\]\nExample inline math $$\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2$$ renders as \\(\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2\\) .\nExample multi-line math using the \\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n\\[f(k;p_0^*) = \\begin{cases} p_0^* \u0026 \\text{if }k=1, \\\\ 1-p_0^* \u0026 \\text {if }k=0.\\end{cases}\\]\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; ```  renders as\ngraph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D;  An example sequence diagram:\n```mermaid sequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d ```  renders as\ngantt dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a Markdown extension for asides, also referred to as notices or hints. By prefixing a paragraph with A\u0026gt;, it will render as an aside. You can enable this feature by adding markup: mmark to your page front matter, or alternatively using the Alert shortcode.\nA\u0026gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.\n Did you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you'll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Hans"],"categories":[],"content":" 返回值 When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:\n The return keyword\n The value or expression that the function should return 函數要返回的值或表示式\nimport random def getAnswer(answerNumber): if answerNumber == 1: return 'It is certain' elif answerNumber == 2: return 'It is decidedly so' elif answerNumber == 3: return 'Yes' elif answerNumber == 4: return 'Reply hazy try again' elif answerNumber == 5: return 'Ask again later' elif answerNumber == 6: return 'Concentrate and ask again' elif answerNumber == 7: return 'My reply is no' elif answerNumber == 8: return 'Outlook not so good' elif answerNumber == 9: return 'Very doubtful' r = random.randint(1, 9) fortune = getAnswer(r) print(fortune)  It is decidedly so\n  # NONE 值\nprint 值 返回 None 如同 r 的 side effect 對於有沒有寫return陳述句的函數,python都會加上return None\nspam = print('Hello!') None == spam  Hello! True  區域變數不能使用在全域作用範圍內 (跟r一樣)\ndef spam(): eggs = 31337 spam() print(eggs)  --------------------------------------------------------------------------- NameError Traceback (most recent call last) \u0026lt;ipython-input-8-c77831cffe5d\u0026gt; in \u0026lt;module\u0026gt;() 2 eggs = 31337 3 spam() ----\u0026gt; 4 print(eggs) NameError: name 'eggs' is not defined  Local Scopes Cannot Use Variables in Other Local Scopes The upshot is that local variables in one function are completely separate from the local variables in another function.\n某個函式中的區域變數與其他函式中的區域變數是完全分開來的,就算名稱相同也完全不相干\ndef spam(): eggs = 99 bacon() print(eggs) def bacon(): ham = 101 eggs = 0 spam()  99  gobal 陳述句 If you need to modify a global variable from within a function, use the global statement. If you have a line such as global eggs at the top of a function, it tells Python, “In this function, eggs refers to the global variable, so don’t create a local variable with this name.\ndef spam(): global eggs eggs = 'spam' print(eggs)  spam  There are four rules to tell whether a variable is in a local scope or global scope:\n If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.\n If there is a global statement for that variable in a function, it is a global variable.\n Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.\n But if the variable is not used in an assignment statement, it is a global variable.\n  for example:\ndef spam(): global eggs eggs = 'spam' # this is the global def bacon(): eggs = 'bacon' # this is a local def ham(): print(eggs) # this is the global eggs = 42 # this is the global spam() print(eggs)  spam  In the spam() function, eggs is the global eggs variable, because there’s a global statement for eggs at the beginning of the function 1. In bacon(), eggs is a local variable, because there’s an assignment statement for it in that function 2. In ham() 3, eggs is the global variable, because there is no assignment statement or global statement for it in that function.\n例外處理 python 程式中若有錯誤(error),或例外(exception)導致整個程式當掉,而我們並不希望發生這樣的事\nｅｘ：［除以０］\ndef spam(divideBy): return 42 / divideBy print(spam(2)) print(spam(12)) print(spam(0)) print(spam(1))  21.0 3.5 --------------------------------------------------------------------------- ZeroDivisionError Traceback (most recent call last) \u0026lt;ipython-input-15-cce18d473349\u0026gt; in \u0026lt;module\u0026gt;() 4 print(spam(2)) 5 print(spam(12)) ----\u0026gt; 6 print(spam(0)) 7 print(spam(1)) \u0026lt;ipython-input-15-cce18d473349\u0026gt; in spam(divideBy) 1 def spam(divideBy): ----\u0026gt; 2 return 42 / divideBy 3 4 print(spam(2)) 5 print(spam(12)) ZeroDivisionError: division by zero  利用try和except陳述句來處理,把有可能出錯的陳述句放在try子句當中,\n當錯誤發生時,程式的執行會跳到接下來的except子句起始處\n把前面除以0的程式碼放在try子句中,而except子句中寫入程式碼來處理錯誤發生時想要做的事\ndef spam(divideBy): try: return 42 / divideBy except ZeroDivisionError: print('Error: Invalid argument.') print(spam(2)) print(spam(12)) print(spam(0)) print(spam(1))  21.0 3.5 Error: Invalid argument. None 42.0  小型例子 :猜數字遊戲 # This is a guess the number game. import random secretNumber = random.randint(1, 20) print('I am thinking of a number between 1 and 20.') # Ask the player to guess 6 times. for guessesTaken in range(1, 7): print('Take a guess.') guess = int(input()) if guess \u0026lt; secretNumber: print('Your guess is too low.') elif guess \u0026gt; secretNumber: print('Your guess is too high.') else: break # This condition is the correct guess! if guess == secretNumber: print('Good job! You guessed my number in ' + str(guessesTaken) + ' guesses!') else: print('Nope. The number I was thinking of was ' + str(secretNumber))  I am thinking of a number between 1 and 20. Take a guess. 10 Your guess is too high. Take a guess. 1 Your guess is too low. Take a guess. 5 Your guess is too low. Take a guess. 8 Your guess is too low. Take a guess. 9 Good job! You guessed my number in 5 guesses!  多個回傳值 def f(): a = 5 b = 6 c = 7 return a,b,c return_value = f() # return value 就是3-tuple return_value  (5, 6, 7)  另一種方法回傳多個值,就是回傳dict:\ndef f(): a = 5 b = 6 c = 7 return{'a': a ,'b': b ,'c': c} return_value = f() return_value  {'a': 5, 'b': 6, 'c': 7}  Functions Are Objects 假設我們要對以下字串list做一些清理和轉換的工作,像是去除空白,刪除標點符號,統一大小寫等\nstates = [' Alabama ', 'Georgia!', 'Georgia', 'georgia', 'FlOrIda','south carolina##', 'West virginia?'] import re def clean_strings(strings): result = [] for value in strings: value = value.strip() #刪除空白 value = re.sub('[!#?]', '', value) #替換特殊符號 value = value.title() #title() 方法返回\u0026quot;标题化\u0026quot;的字符串,就是说所有单词都是以大写开始 result.append(value) return result  clean_strings(states)  ['Alabama', 'Georgia', 'Georgia', 'Georgia', 'Florida', 'South Carolina', 'West Virginia']  另一個有用的方法,是將要做的動作寫成list,然後對你想修改的字串使用這些動作:\ndef remove_punctuation(value): return re.sub('[!#?]', '', value) clean_ops = [str.strip, remove_punctuation, str.title] def clean_strings(strings, ops): result = [] for value in strings: for function in ops: value = function(value) result.append(value) return result  clean_strings(states, clean_ops)  ['Alabama', 'Georgia', 'Georgia', 'Georgia', 'Florida', 'South Carolina', 'West Virginia']  你可以將一個函式當作另一個函式的參數,例如內建的 map 函式\nfor x in map(remove_punctuation, states): print(x) map(remove_punctuation, states)   Alabama Georgia Georgia georgia FlOrIda south carolina West virginia \u0026lt;map at 0x197a79d5b70\u0026gt;  ## 匿名函式\ndef short_function(x): return x * 2  寫法同下 :\nequiv_anon = lambda x: x * 2  範例:\ndef apply_to_list(some_list, f): return [f(x) for x in some_list] ints = [4, 0, 1, 5, 6] apply_to_list(ints, lambda x: x * 2)  [8, 0, 2, 10, 12]  def apply_to_list(some_list, f): return f(some_list) ints = [4, 0, 1, 5, 6] apply_to_list(ints, lambda x: x * 2)  [4, 0, 1, 5, 6, 4, 0, 1, 5, 6]  我們也可以將lambda函式傳到list的sort方法中\nstrings = ['foo', 'card', 'bar', 'aaaa', 'abab']  strings.sort(key=lambda x: len(set(list(x)))) strings  Generators (產生器) Having a consistent way to iterate over sequences, like objects in a list or lines in a file, is an important Python feature. This is accomplished by means of the iterator protocol, a generic way to make objects iterable. For example, iterating over a dict yields the dict keys:\nsome_dict = {'a': 1, 'b': 2, 'c': 3} for key in some_dict: print(key)  a b c  When you write for key in some_dict, the Python interpreter first attempts to create an iterator out of some_dict:\ndict_iterator = iter(some_dict) dict_iterator  \u0026lt;dict_keyiterator at 0x197a7a520e8\u0026gt;  An iterator is any object that will yield objects to the Python interpreter when used in a context like a for loop. Most methods expecting a list or list-like object will also accept any iterable object. This includes built-in methods such as min, max, and sum, and type constructors like list and tuple:\nA generator is a concise way to construct a new iterable object. Whereas normal functions execute and return a single result at a time, generators return a sequence of multiple results lazily, pausing after each one until the next one is requested. To create a generator, use the yield keyword instead of return in a function:\ndef squares(n=10): print('Generating squares from 1 to {0}'.format(n ** 2)) for i in range(1, n + 1): yield i ** 2  When you actually call the generator, no code is immediately executed:\ngen = squares() gen  \u0026lt;generator object squares at 0x00000197A7A68620\u0026gt;  It is not until you request elements from the generator that it begins executing its code:\nfor x in gen: print(x, end=' ')  Generating squares from 1 to 100 1 4 9 16 25 36 49 64 81 100  Generator expresssions 另一種製造產生器的簡單方法是利用Generator expresssions ,寫在小括號中:\ngen = (i** 2 for i in range(100)) gen  \u0026lt;generator object \u0026lt;genexpr\u0026gt; at 0x00000197A7A68B48\u0026gt;  以上寫法完全等同於以下寫法:\ndef _make_gen(): for x in range(100): yield x ** 2 gen = _make_gen() gen  \u0026lt;generator object _make_gen at 0x00000197A7A685C8\u0026gt;  可變動與不可變動型別: 重點 1. mutable type 使用 [:] 複製元素,元素各自獨立 a = [1,2] c = [a[:] for x in range(2)] c[0][0] = 3 c  [[3, 2], [1, 2]]  以下為錯誤示範 #錯誤 a = [3,4] b = [a]*2 a[1] = 8 b  [[3, 8], [3, 8]]  #正確 a = [3,4] c = [a[:]]*2 a[1] = 8 c  [[3, 4], [3, 4]]  for 迴圈 與 串列 1. 使用下標：透過len取得串列長度 2 直接取得元素 #使用下標 a = [5,8,7] for i in range( len(a)): print(a[i])  5 8 7  # 直接取得元素 a = [5,8,7] for x in a: print(x)  5 8 7  for 迴圈更改串列元素 a = [1,8,3] for i in range(len(a)): a[i] += 10 a  [11, 18, 13]  以下為錯誤用法 : 因為整數為immutable\n## 錯誤示範 a = [1,8,3] for x in a: x += 10  [1, 8, 3]  2. 函式參數值的更改  immutable 參數在函式內的更動會變換儲存位置,與原本傳入的變數脫離關係 mutable 參數在函式內的更動不會變換儲存位置,會影響原傳入變數\n# a 為 immutable , b為 mutable def change_vals(a,b): print(a) a = 10 # a 另找空間儲存10, a與 foo脫離關係 b.append(5) # b 串列增加一個元素 foo , bar = 3, [4,9] #在函式內變更二參數資料 change_vals(foo,bar) #foo 整數不變 , bar串列會變動 print(foo , bar ) # A : foo =3 ,bar =[4,9,5]  immutable 參數可透過函式回傳來變更\ndef inc_one (s , t): s += 1 t += 1 return s,t a , b = 2,5 a,b = inc_one(a,b) a,b  (3, 6)\n 串列參數若指定到新串列,之後的設定不影響原傳入串列\ndef change_lists(a,b): a =[3] # a 指定到新串列,與原傳入串列 foo 脫離關係 b[0] = 5 # 修改 b[0] 元素 foo , bar =[9], [2,7] change_lists(foo,bar) print(foo,bar)  [9] [5, 7]\n  ","date":1562544000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562544000,"objectID":"952983ce8f92afcc200ecf8ed30fe1a7","permalink":"/python/function/","publishdate":"2019-07-08T00:00:00Z","relpermalink":"/python/function/","section":"Python","summary":"Functions and my notes","tags":[],"title":"some trick of function","type":"Python"},{"authors":["Hans"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Hans"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"1ad6fcfe6e4ec774c818b0bf8e1e4623","permalink":"/r/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/r/jupyter/","section":"R","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"R"},{"authors":["Hans"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Hans"],"categories":[],"content":"b = [[1,2],[9,4,5]] c = b[0][1] d=b[1][0] e=len(b) f= len(b[1]) print(\u0026quot;c=\u0026quot;,c) print(\u0026quot;d=\u0026quot;,d) print(\u0026quot;e=\u0026quot;,e) print(\u0026quot;f=\u0026quot;,f)  c= 2 d= 9 e= 2 f= 3  a =[1,2,3,4,5] a[1:-1]=a a[1:-1]=[] print(a)  [1, 5]  a=[1,2] b = a b=b+[3] a  [1, 2]  a=[1,2] b = a b+=[3] a  [1, 2, 3]  import copy a = [1, 2, 3, 4, ['a', 'b']] #原始对象 b = a #赋值，传对象的引用 c = copy.copy(a) #对象拷贝，浅拷贝 d = copy.deepcopy(a) #对象拷贝，深拷贝 a.append(5) #修改对象a a[4].append('c') #修改对象a中的['a', 'b']数组对象 print( 'a = ', a ) print( 'b = ', b ) print( 'c = ', c ) print( 'd = ', d )  a = [1, 2, 3, 4, ['a', 'b', 'c'], 5] b = [1, 2, 3, 4, ['a', 'b', 'c'], 5] c = [1, 2, 3, 4, ['a', 'b', 'c']] d = [1, 2, 3, 4, ['a', 'b']]  ### list comprehension # 一般寫法 arr1 = [] for i in range(10): arr1.append(i) print(arr1)  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  # in-place construction arr1 = [i for i in range(10)] print(arr1)  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  # in-place construction arr1 = [i for i in range(10)] # you can use if to filter the elements arr2 = [x for x in arr1 if x % 2 == 0] # you can use as many conditions as you want! arr3 = [x for x in arr1 if x \u0026gt;= 3 and x % 2] # use nested for loops to make everyone dizzy XD arr4 = [(x, y) for x in range(3) for y in range(4)] print(arr1) print(arr2) print(arr3) print(arr4)  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] [0, 2, 4, 6, 8] [3, 5, 7, 9] [(0, 0), (0, 1), (0, 2), (0, 3), (1, 0), (1, 1), (1, 2), (1, 3), (2, 0), (2, 1), (2, 2), (2, 3)]  [x for x in range(4)] [t*t for t in [1,2,3]] [[x,x*x] for x in range(3)] [x for x in range(10) if x not in [3,4,5]] [[x,x*x] for x in range(4) if x//3]  [[3, 9]]  ############################### a=[3,4] b=[a]*2 a[1]=8 b  [[3, 8], [3, 8]]  a=[3,4] b=a[:]*2 a[1]=8 b  [3, 4, 3, 4]  #for 迴圈與串列  b =[[1],[8,2],[4,3,3]] for i in range(len(b)): for j in range(len(b[i])): print(b[i][j],end=\u0026quot; \u0026quot;) print()  1 8 2 4 3 3  #同上 b =[[1],[8,2],[4,3,3]] for p in b: for x in p: print(x,end=\u0026quot; \u0026quot;) print()  1 8 2 4 3 3  #同上 for p in [[1],[8,2],[4,3,3]]: for x in p: print(x,end=\u0026quot; \u0026quot;) print()  1 8 2 4 3 3  #for 迴圈更改 串列元素  a =[1,8,3] for i in range(len(a)): a[i]+=10 print(a)  [11, 18, 13]  a =[1,8,3] for x in a: x+=10 print(a)  [1, 8, 3]  b=[[1],[5,8],[3,4]] for i in range(len(b)): for j in range(len(b[i])): b[i][j]+=10 print(b)  [[11], [15, 18], [13, 14]]  b=[[1],[5,8],[3,4]] for p in b: for i in range(len(p)): p[i]+=10 print(b)  [[11], [15, 18], [13, 14]]  #有誤 b=[[1],[5,8],[3,4]] for p in b: for x in p: x +=10 print(b)  [[1], [5, 8], [3, 4]]  #字串分解成字元串列  list(\u0026quot;abc\u0026quot;)  ['a', 'b', 'c']  list(\u0026quot;123\u0026quot;)  ['1', '2', '3']  n=423 a=[int(x) for x in list(str(n))] a\n#使用index取出下標  dirs=[\u0026quot;west\u0026quot;,\u0026quot;north\u0026quot;,\u0026quot;west\u0026quot;,\u0026quot;south\u0026quot;] dirs.index(\u0026quot;west\u0026quot;)  0  for d in dirs: print(d,dirs.index(d),sep=\u0026quot;:\u0026quot;,end=\u0026quot; \u0026quot;)  west:0 north:1 west:0 south:3  ####tuple##  (one,two,three)=(1,2,3) three  3  [one,two,three]=[1,2,3] three  3  a=(4,5,6) (four,five,six) = a six  6  ###小括號省略 one ,two =1,2 two  2  from random import*  nums = [uniform(-1,1) for i in range(4)] for x in nums : print(x)  0.4867200676882866 0.6229973999177287 -0.5681957844554919 0.39087687240861757  nums = [uniform(-1,1) for i in range(4)] print(nums)  [-0.5903251082623902, 0.3351431014940154, -0.5958451499766018, 0.568850457028085]  ## 10 人擲骰子' import random foo = [random.randint(1,6) for i in range(10)] print(foo)  [6, 1, 6, 3, 1, 3, 4, 5, 5, 1]  # 10個號碼隨意分給4個人,每人2球 balls=list(range(1,11)) #打亂順序 random.shuffle(balls) print(balls) #分給4人,美人2球 pno,m=4,2 for i in range(pno): print(i+1,end=\u0026quot;: \u0026quot;) for x in balls[i*m:i*m+m]: print(x,end=\u0026quot; \u0026quot;) print()  [4, 7, 9, 8, 2, 3, 5, 10, 1, 6] 1: 4 7 2: 9 8 3: 2 3 4: 5 10  #三人各擲四次色子 dices = \u0026quot;牛馬獅虎龍鳳\u0026quot; #3人任意投擲4次 pno , m = 3 ,4 for p in range(pno): print(p+1,end=\u0026quot;: \u0026quot;) for k in range(m): print(random.choice(dices),end=\u0026quot; \u0026quot;) print()  1: 馬 馬 獅 馬 2: 獅 鳳 馬 牛 3: 鳳 牛 牛 馬  import random while True : # 斜條線數量 n = int( input(\u0026quot;\u0026gt; \u0026quot;) ) # m 最長直線高 # w 直條圖寬 m , w = 9 , 3 # 使用亂數設定各直條線長 vals = [ random.randint(1,m) for i in range(1,n+1) ] # 畫直條線 for s in range(m,0,-1) : for val in vals : if s \u0026gt; val : print( \u0026quot; \u0026quot;*w , end=\u0026quot; \u0026quot; ) elif s == val : print( \u0026quot;\\\\\u0026quot; + str(val) + \u0026quot;/\u0026quot; , end=\u0026quot; \u0026quot; ) else : print( \u0026quot; | \u0026quot; , end=\u0026quot; \u0026quot; ) print() # 畫底部等號 print( \u0026quot;=\u0026quot;*( (w+1)*n - 1) )  \u0026gt; 10 \\9/ | \\8/ | | \\7/ | | \\6/ \\6/ | | | \\5/ | | | | | | | | | | | | | | | \\3/ | \\2/ | | \\2/ | | | | | | \\1/ | | | | | | | ======================================= \u0026gt; -1 \u0026gt; 10 \\9/ | \\7/ | \\7/ \\6/ | | | \\5/ | | | | | | \\4/ | | | | | | | \\3/ | | \\3/ \\2/ | | \\2/ | | | | | | | | | | | | | | | | =======================================  1+1  from random import * n , total = 5 , 50000 counts = [ 0 for x in range(n+1) ] for k in range(total) : # 起始落下的位置 ball_pos = 2*randint(1,n) - 1 # 第一層釘子 move = 2*randint(0,1) - 1 ball_pos += move # 第二到第五層釘子 for i in range(2) : move = 2*randint(0,1) - 1 ball_pos += move # 碰到兩側，提前離開 if ball_pos \u0026lt; 0 or ball_pos \u0026gt; 2*n : break move = 2*randint(0,1) - 1 ball_pos += move # 球數統計 if ball_pos \u0026lt; 0 : counts[0] += 1 elif ball_pos \u0026gt; 2*n : counts[-1] += 1 else : counts[ball_pos//2] += 1 # 列印 for no in counts : s = int(160*no/total+0.5) print(str(s)+\u0026quot;/160\u0026quot;,end=\u0026quot; \u0026quot;) print()  24/160 25/160 31/160 31/160 25/160 24/160  ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"5df9e3a88f897420ec75c5b15293e926","permalink":"/python/list/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/python/list/","section":"Python","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"list","type":"Python"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Hans"],"categories":["Demo"],"content":" Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup Academic Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt      Key features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes Academic comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"c94fbb8eb282b565be4322f417fc96f9","permalink":"/r/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/r/getting-started/","section":"R","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic"],"title":"Academic: the website builder for Hugo","type":"R"},{"authors":["Hans"],"categories":["Demo"],"content":" Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup Academic Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt      Key features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes Academic comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic"],"title":"Academic: the website builder for Hugo","type":"post"},{"authors":["Hans","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Hans","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"}]